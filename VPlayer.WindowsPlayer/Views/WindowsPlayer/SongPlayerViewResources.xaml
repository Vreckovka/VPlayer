<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachedProperties="clr-namespace:VCore.AttachedProperties;assembly=VCore.WPF"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:behaviors="clr-namespace:VPlayer.Player.Behaviors"
                    xmlns:behaviors1="clr-namespace:VPlayer.WindowsPlayer.Behaviors"
                    xmlns:controls2="clr-namespace:VCore.Controls;assembly=VCore.WPF"
                    xmlns:library="clr-namespace:VPlayer.Library;assembly=VPlayer.Core"
                    xmlns:local="clr-namespace:VPlayer.WindowsPlayer.Views.WindowsPlayer"
                    xmlns:lrc="clr-namespace:VPlayer.AudioStorage.InfoDownloader.LRC;assembly=VCore.WPF"
                    xmlns:templateSelectors="clr-namespace:VPlayer.WindowsPlayer.TemplateSelectors"
                    xmlns:windowsPlayer="clr-namespace:VPlayer.Player.Views.WindowsPlayer">

  <library:CacheImageConverter x:Key="CacheImageConverter" />

  <Style x:Key="LyricsStyle" TargetType="TextBox">
    <Setter Property="FontSize" Value="24" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Foreground" Value="{StaticResource YellowBrush}" />

    <Setter Property="FontWeight" Value="DemiBold" />
    <Setter Property="IsReadOnly" Value="True" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="0.05"
                          RenderingBias="Quality"
                          ShadowDepth="5" />
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="LyricsDataTemplate">
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
      <TextBox Style="{StaticResource LyricsStyle}" Text="{Binding Mode=OneWay}" />
    </ScrollViewer>
  </DataTemplate>

  <DataTemplate x:Key="SyncedLyricsDataTemplate">
    <Grid>
      <TextBlock Margin="15,8"
                 VerticalAlignment="Bottom"
                 FontSize="13"
                 FontWeight="Normal"
                 Foreground="#30ffffff"
                 Text="SYNCED" />
      <ListView Background="Transparent"
                BorderThickness="0"
                ItemsSource="{Binding Lines}"
                ScrollViewer.CanContentScroll="False"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Hidden">
        <ListView.Style>
          <Style TargetType="ListView">
            <Setter Property="Padding" Value="0" />
            <Setter Property="ItemContainerStyle">
              <Setter.Value>
                <Style TargetType="ListViewItem">
                  <Setter Property="Background" Value="Red" />
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Margin="0" Padding="0">
                          <TextBox Text="{Binding Text, Mode=OneWay}">
                            <TextBox.Style>
                              <Style BasedOn="{StaticResource LyricsStyle}" TargetType="TextBox">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding IsActual}" Value="true">
                                    <Setter Property="FontSize" Value="32" />
                                    <Setter Property="Margin" Value="25" />
                                    <Setter Property="Padding" Value="10" />
                                    <Setter Property="Background" Value="#80000000" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </TextBox.Style>
                          </TextBox>
                        </Border>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Setter.Value>
            </Setter>
          </Style>
        </ListView.Style>

        <b:Interaction.Behaviors>
          <behaviors:AutoScrollLyricsBehavior AnimationTime="0:0:0:0.6" StepSize="29" />
        </b:Interaction.Behaviors>
      </ListView>

      <Grid Margin="15,10"
            HorizontalAlignment="Left"
            VerticalAlignment="Top">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition />
        </Grid.RowDefinitions>
        <ToggleButton x:Name="SettingsButton"
                      HorizontalAlignment="Left"
                      Style="{StaticResource BorderlessToggleButtonStyle}">
          <Grid Margin="0,0,0,0">
            <Image Width="20"
                   Height="20"
                   Source="pack://application:,,,/VPlayer;component/Resources/Icons/settings.png" />

            <Rectangle x:Name="ImageOpacityMask"
                       Width="20"
                       Height="20"
                       Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=Foreground}">

              <Rectangle.OpacityMask>
                <ImageBrush ImageSource="pack://application:,,,/VPlayer;component/Resources/Icons/settings.png" />
              </Rectangle.OpacityMask>
            </Rectangle>
          </Grid>

        </ToggleButton>

        <Border Grid.Row="1"
                Margin="0,5,0,0"
                HorizontalAlignment="Left"
                Background="#90101010"
                CornerRadius="5">
          <StackPanel Width="100"
                      Margin="10"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center">

            <TextBlock Text="Adjust lyrics (ms)" />
            <TextBox Text="{Binding TimeAdjustment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            <Button Width="70"
                    Margin="5"
                    Command="{Binding ApplyPernamently}"
                    Content="Update" />
          </StackPanel>
          <Border.Style>
            <Style TargetType="Border">
              <Setter Property="Visibility" Value="Hidden" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=SettingsButton, Path=IsChecked}" Value="True">
                  <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>
        </Border>

      </Grid>

    </Grid>
  </DataTemplate>

  <Style x:Key="SyncLyricsSubIconStyle" TargetType="Path">
    <Setter Property="Opacity" Value="0.3" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls2:ButtonWithIcon}, Path=DataContext.IsPlaying}" Value="true">
        <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=controls2:ButtonWithIcon}, Path=IconBrush}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <DataTemplate x:Key="GoogleLyricsDataTemplate">
    <Path Width="10"
          Height="10"
          Margin="-2,-6,0,0"
          ToolTip="Google drive">
      <Path.Style>
        <Style BasedOn="{attachedProperties:MultiStyle GoogleDrive SyncLyricsSubIconStyle}" TargetType="Path">
          <Setter Property="Fill" Value="#4285f4" />

          <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls2:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd" />
                <BeginStoryboard x:Name="HoverStoryboardStart">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="0.75"
                                     Duration="0:0:0:0.15" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>

              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                <BeginStoryboard x:Name="HoverStoryboardEnd">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="0.3"
                                     Duration="0:0:0:0.15" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Path.Style>
    </Path>
  </DataTemplate>

  <DataTemplate x:Key="LocalLyricsDataTemplate">
    <Path Width="9"
          Height="9"
          Margin="0,-6,0,0"
          ToolTip="Local file">

      <Path.Style>
        <Style BasedOn="{attachedProperties:MultiStyle Folder SyncLyricsSubIconStyle}" TargetType="Path">
          <Setter Property="Fill" Value="#f4d642" />

          <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls2:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd" />
                <BeginStoryboard x:Name="HoverStoryboardStart">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0:0:0:0.15" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>

              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                <BeginStoryboard x:Name="HoverStoryboardEnd">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="0.5"
                                     Duration="0:0:0:0.15" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Path.Style>
    </Path>
  </DataTemplate>

  <DataTemplate x:Key="AlbumImageDatatemplate">
    <Grid>

      <Grid VerticalAlignment="Stretch">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Image Grid.Column="0"
                 Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={StaticResource CacheImageConverter}, IsAsync=True}"
                 Stretch="UniformToFill" />

          <Image Grid.Column="1"
                 Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={StaticResource CacheImageConverter}, IsAsync=True}"
                 Stretch="UniformToFill" />
        </Grid>

        <Grid>
          <Grid.Background>
            <LinearGradientBrush StartPoint="1,0" EndPoint="0 0">
              <GradientStop Offset="1" Color="#FF000000" />
              <GradientStop Offset="0.5" Color="#00000000" />
              <GradientStop Offset="0.0" Color="#00000000" />
              <GradientStop Offset="0.0" Color="#FF000000" />
            </LinearGradientBrush>
          </Grid.Background>
        </Grid>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
          <Grid.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="0 0">
              <GradientStop Offset="1" Color="#5A000000" />
              <GradientStop Offset="0.6" Color="#5A000000" />
              <GradientStop Offset="0.05" Color="#5A000000" />
            </LinearGradientBrush>
          </Grid.Background>
        </Grid>
      </Grid>


      <Border Margin="0,15,0,15"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Panel.ZIndex="0"
              BorderBrush="#FF080808"
              BorderThickness="5">
        <Image Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={StaticResource CacheImageConverter}, IsAsync=True}" />

        <Border.Effect>
          <DropShadowEffect BlurRadius="20"
                            Direction="0"
                            ShadowDepth="15" />
        </Border.Effect>
      </Border>

      <Grid Grid.Row="0">
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="0 0">
            <GradientStop Offset="1" Color="#2A000000" />
            <GradientStop Offset="0.85" Color="#00000000" />
            <GradientStop Offset="0.15" Color="#00000000" />
            <GradientStop Offset="0.0" Color="#2A000000" />
          </LinearGradientBrush>
        </Grid.Background>
      </Grid>

      <Grid>
        <Grid.Background>
          <LinearGradientBrush StartPoint="1,0" EndPoint="0 1">
            <GradientStop Offset="1" Color="#80000000" />
            <GradientStop Offset="0.65" Color="#00000000" />
            <GradientStop Offset="0.35" Color="#00000000" />
            <GradientStop Offset="0.0" Color="#80000000" />
          </LinearGradientBrush>
        </Grid.Background>
      </Grid>
    </Grid>

  </DataTemplate>

  <DataTemplate x:Key="GifImageDatatemplate">
    <Grid>
      <Image Name="Image"
             behaviors1:ImageBehavior.AnimatedSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.RandomGifUrl}"
             Stretch="Uniform" />

      <Grid Grid.RowSpan="2">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>


        <StackPanel Margin="80,10,0,0"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">
          <TextBlock Text="GIF tag: " />
          <TextBox Margin="0,-10,0,0"
                   Text="AHoj"
                   Visibility="Visible" />
        </StackPanel>

        <controls2:ButtonWithIcon Grid.Column="1"
                                  Margin="25"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.NextGif}"
                                  Content="Next GIF"
                                  IconHeight="30"
                                  IconMargin="0 0 5 0"
                                  IconPathStyle="{StaticResource NextInCircle}"
                                  IconWidth="30" />
      </Grid>

    </Grid>

  </DataTemplate>


  <templateSelectors:LyricsTemplateSelector x:Key="LyricsTemplateSelector"
                                            LyricsDataTemplate="{StaticResource LyricsDataTemplate}"
                                            SyncLyricsDataTemplate="{StaticResource SyncedLyricsDataTemplate}" />

  <templateSelectors:LyricsProviderTemplateSelector x:Key="LyricsProviderTemplateSelector"
                                                    GoogleDataTemplate="{StaticResource GoogleLyricsDataTemplate}"
                                                    LocalDataTemplate="{StaticResource LocalLyricsDataTemplate}" />

  <templateSelectors:SongImageTemplateSelector x:Key="SongImageTemplateSelector"
                                               AlbumDataTemplate="{StaticResource AlbumImageDatatemplate}"
                                               GifDataTemplate="{StaticResource GifImageDatatemplate}" />

  <DataTemplate x:Key="PlayListSoundDataTemplate">
    <Grid Background="Transparent">
      <Border Padding="0,0,5,5">
        <Grid VerticalAlignment="Bottom">
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="auto" />
          </Grid.ColumnDefinitions>

          <TextBlock Margin="22,01,0,0" Text="Downloading info...">
            <TextBlock.Style>
              <Style TargetType="TextBlock">
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="Foreground" Value="#555555" />

                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsDownloading}" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                    <Setter Property="Foreground" Value="#101010" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </TextBlock>


          <Grid Grid.Column="1" Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Grid Width="60"
                  Margin="0,0,10,3"
                  HorizontalAlignment="Right">
              <Grid.Resources>
                <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="controls2:ButtonWithIcon">
                  <Setter Property="IconHeight" Value="11" />
                  <Setter Property="IconWidth" Value="11" />
                </Style>
              </Grid.Resources>

              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>

              <controls2:PathButton Grid.Column="0"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="1"
                                    IconHeight="13"
                                    IconWidth="13"
                                    IsChecked="{Binding IsFavorite}"
                                    PathStyle="{StaticResource Favorite}"
                                    ToolTip="Favorite">
                <controls2:PathButton.Style>
                  <Style BasedOn="{StaticResource {x:Type controls2:PathButton}}" TargetType="controls2:PathButton">
                    <Setter Property="IconDefaultColor" Value="#10ffffff" />
                    <Setter Property="IconHoverColor" Value="#8fd4f2" />
                    <Setter Property="PathCheckedBrush" Value="#aa39b2e6" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                        <Setter Property="IconDefaultColor" Value="#30522e05" />
                        <Setter Property="IconHoverColor" Value="#79b1c9" />
                        <Setter Property="PathCheckedBrush" Value="#39b2e6" />
                      </DataTrigger>

                    </Style.Triggers>
                  </Style>
                </controls2:PathButton.Style>
              </controls2:PathButton>
            </Grid>
          </Grid>
        </Grid>
      </Border>

      <Grid.ContextMenu>
        <ContextMenu>
          <MenuItem Command="{Binding DeleteItemFromPlaylist}" Header="Delete song from playlist" />
          <MenuItem Command="{Binding DeleteSongFromPlaylistWithAlbum}" Header="Delete song album from playlist" />

          <MenuItem IsHitTestVisible="False" />

          <MenuItem Command="{Binding OpenContainingFolder}" Header="Open folder" />
        </ContextMenu>
      </Grid.ContextMenu>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="PlayListSongDataTemplate">
    <Grid Background="Transparent">
      <Border Padding="0,0,5,5">
        <Grid VerticalAlignment="Bottom">
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="auto" />
          </Grid.ColumnDefinitions>

          <TextBlock Margin="22,01,0,0" Text="Downloading info...">
            <TextBlock.Style>
              <Style TargetType="TextBlock">
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="Foreground" Value="#555555" />

                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsDownloading}" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                    <Setter Property="Foreground" Value="#101010" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </TextBlock>

          <TextBlock Margin="5,0,0,0" FontSize="12">
            <Run FontSize="13" Text="{Binding ArtistViewModel.Name, Mode=OneWay}">
              <Run.Style>
                <Style TargetType="Run">
                  <Setter Property="Foreground" Value="#f2e0cb" />
                  <Setter Property="FontWeight" Value="Bold" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                      <Setter Property="Foreground" Value="#24140c" />
                      <Setter Property="FontWeight" Value="Bold" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Run.Style>
            </Run>

            <Run Text="{Binding AlbumViewModel.Name, Mode=OneWay, StringFormat={}({0})}">
              <Run.Style>
                <Style TargetType="Run">
                  <Setter Property="Foreground" Value="#edfffa" />
                  <Setter Property="FontWeight" Value="DemiBold" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                      <Setter Property="Foreground" Value="#24140c" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Run.Style>
            </Run>

            <TextBlock.Style>
              <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource OrangeBrush}" />
                <Setter Property="Opacity" Value="0.35" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                    <Setter Property="Opacity" Value="0.75" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </TextBlock>

          <Grid Grid.Column="1" Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Grid Width="60"
                  Margin="0,0,10,3"
                  HorizontalAlignment="Right">
              <Grid.Resources>
                <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="controls2:ButtonWithIcon">
                  <Setter Property="IconHeight" Value="11" />
                  <Setter Property="IconWidth" Value="11" />
                </Style>
              </Grid.Resources>

              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>

              <controls2:PathButton Grid.Column="0"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="1"
                                    IconHeight="13"
                                    IconHoverColor="#39b2e6"
                                    IconWidth="13"
                                    IsChecked="{Binding IsFavorite}"
                                    PathCheckedBrush="#39b2e6"
                                    PathStyle="{StaticResource Favorite}"
                                    ToolTip="Favorite">
                <controls2:PathButton.Style>
                  <Style BasedOn="{StaticResource {x:Type controls2:PathButton}}" TargetType="controls2:PathButton">
                    <Setter Property="IconDefaultColor" Value="#10ffffff" />

                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                        <Setter Property="IconDefaultColor" Value="#30522e05" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </controls2:PathButton.Style>
              </controls2:PathButton>

              <Grid Grid.Column="1" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto" />
                  <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <controls2:ButtonWithIcon Grid.Column="0"
                                          Margin="1,0,0,0"
                                          Padding="0"
                                          HorizontalAlignment="Left"
                                          IconHeight="11"
                                          IconPathStyle="{StaticResource TextLyrics}"
                                          IconWidth="11"
                                          ToolTip="Lyrics">
                  <controls2:ButtonWithIcon.Style>
                    <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="{x:Type controls2:ButtonWithIcon}">
                      <Setter Property="IconHoverColor" Value="#59ad55" />
                      <Setter Property="IconDefaultColor" Value="#2b5229" />
                      <Setter Property="Opacity" Value="1" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="IconHoverColor" Value="#522e05" />
                          <Setter Property="IconDefaultColor" Value="#FF050505" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Lyrics}" Value="{x:Null}">
                          <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Lyrics}" Value="">
                          <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                      </Style.Triggers>
                    </Style>
                  </controls2:ButtonWithIcon.Style>

                </controls2:ButtonWithIcon>

                <controls2:ButtonWithIcon Grid.Column="1"
                                          Margin="0,0,0,-3"
                                          Padding="0"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          IconHeight="11"
                                          IconPathStyle="{StaticResource Microphone}"
                                          IconWidth="11"
                                          ToolTip="Synced lyrics">

                  <controls2:ButtonWithIcon.Style>
                    <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="{x:Type controls2:ButtonWithIcon}">
                      <Setter Property="IconHoverColor" Value="#85876d" />
                      <Setter Property="IconDefaultColor" Value="#414236" />
                      <Setter Property="Opacity" Value="1" />
                      <Setter Property="Margin" Value="0,0,0,0" />

                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type controls2:ButtonWithIcon}">
                            <Border Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Margin="{TemplateBinding Margin}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Background="{TemplateBinding Background}">
                              <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                  <ColumnDefinition Width="auto" />
                                  <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                  <RowDefinition />
                                  <RowDefinition />
                                </Grid.RowDefinitions>

                                <Path Name="ButtonIcon"
                                      Width="{TemplateBinding IconWidth}"
                                      Height="{TemplateBinding IconHeight}"
                                      Margin="0"
                                      Fill="{TemplateBinding IconBrush}"
                                      Style="{TemplateBinding IconPathStyle}" />


                                <ContentControl Grid.Row="1"
                                                Grid.Column="1"
                                                Width="9"
                                                Height="4"
                                                BorderThickness="0"
                                                Content="{Binding LRCFile}"
                                                ContentTemplateSelector="{StaticResource LyricsProviderTemplateSelector}" />


                              </Grid>

                              <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseEnter">
                                  <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateHoverColor}" />
                                </b:EventTrigger>

                                <b:EventTrigger EventName="MouseLeave">
                                  <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateDefaultColor}" />
                                </b:EventTrigger>
                              </b:Interaction.Triggers>

                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Trigger.EnterActions>
                                  <RemoveStoryboard BeginStoryboardName="ResetForegroundStoryBoard" />

                                  <BeginStoryboard x:Name="ChangeForegroundStoryBoard">
                                    <Storyboard>
                                      <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                                      To="{StaticResource DefaultWhiteColor}"
                                                      Duration="0:0:.15" />
                                    </Storyboard>
                                  </BeginStoryboard>


                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                  <RemoveStoryboard BeginStoryboardName="ChangeForegroundStoryBoard" />
                                  <BeginStoryboard x:Name="ResetForegroundStoryBoard">
                                    <Storyboard>
                                      <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                                      To="{StaticResource 85_DefaultWhiteColor}"
                                                      Duration="0:0:.15" />
                                    </Storyboard>
                                  </BeginStoryboard>
                                </Trigger.ExitActions>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>

                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="IconHoverColor" Value="#522e05" />
                          <Setter Property="IconDefaultColor" Value="#FF050505" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding LRCFile}" Value="{x:Null}">
                          <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding LRCFile.Provider}" Value="{x:Static lrc:LRCProviders.Google}">
                          <Setter Property="Margin" Value="2,-5,0,-9" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding LRCFile.Provider}" Value="{x:Static lrc:LRCProviders.Local}">
                          <Setter Property="Margin" Value="2,-7,0,-9" />
                        </DataTrigger>
                      </Style.Triggers>

                    </Style>
                  </controls2:ButtonWithIcon.Style>
                </controls2:ButtonWithIcon>
              </Grid>


            </Grid>

            <controls2:ButtonWithIcon Grid.Column="1"
                                      Padding="0"
                                      HorizontalAlignment="Right"
                                      Command="{Binding Refresh}"
                                      IconHeight="11"
                                      IconPathStyle="{StaticResource Repeate}"
                                      IconWidth="11"
                                      ToolTip="Reload data">
              <controls2:ButtonWithIcon.Style>
                <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="{x:Type controls2:ButtonWithIcon}">
                  <Setter Property="IconHoverColor" Value="Gold" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                      <Setter Property="IconHoverColor" Value="#522e05" />
                      <Setter Property="IconDefaultColor" Value="#FF050505" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </controls2:ButtonWithIcon.Style>
            </controls2:ButtonWithIcon>
          </Grid>
        </Grid>
      </Border>

      <Grid.ContextMenu>
        <ContextMenu>
          <MenuItem Command="{Binding DeleteItemFromPlaylist}" Header="Delete song from playlist" />
          <MenuItem Command="{Binding DeleteSongFromPlaylistWithAlbum}" Header="Delete song album from playlist" />

          <MenuItem IsHitTestVisible="False" />

          <MenuItem Command="{Binding OpenContainingFolder}" Header="Open folder" />
        </ContextMenu>
      </Grid.ContextMenu>
    </Grid>
  </DataTemplate>

</ResourceDictionary>