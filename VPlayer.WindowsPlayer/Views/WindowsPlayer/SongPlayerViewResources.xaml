<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:behaviors="clr-namespace:VPlayer.Player.Behaviors"
                    xmlns:behaviors1="clr-namespace:VPlayer.WindowsPlayer.Behaviors"
                    xmlns:behaviors2="clr-namespace:VCore.WPF.Behaviors;assembly=VCore.WPF"
                    xmlns:buttons="clr-namespace:VCore.WPF.Behaviors.Buttons;assembly=VCore.WPF"
                    xmlns:controls="clr-namespace:VCore.WPF.Controls;assembly=VCore.WPF"
                    xmlns:converters="clr-namespace:VCore.WPF.Converters;assembly=VCore.WPF"
                    xmlns:multistyle="clr-namespace:VCore.WPF.AttachedProperties.Multistyle;assembly=VCore.WPF"
                    xmlns:numericUpAndDown="clr-namespace:VCore.WPF.Controls.NumericUpAndDown;assembly=VCore.WPF"
                    xmlns:templateSelectors="clr-namespace:VPlayer.WindowsPlayer.TemplateSelectors"
                    xmlns:windowsPlayer="clr-namespace:VPlayer.Player.Views.WindowsPlayer"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <converters:CacheImageConverter x:Key="CacheImageConverter" />

    <converters:CacheImageConverter x:Key="CacheImageConverterLowerQuality"
                                    DecodeHeight="350"
                                    DecodeWidth="350" />

    <Style x:Key="LyricsStyle" TargetType="TextBox">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource YellowBrush}" />

        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="0.05"
                                  RenderingBias="Quality"
                                  ShadowDepth="5" />
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="LyricsDataTemplate">

        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <controls:PathButton Margin="10,10,0,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Top"
                                 Command="{Binding CreateLRCLyrics}"
                                 CommandParameter="{Binding ActualItem}"
                                 DataContext="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Mode=OneWay, Path=DataContext}"
                                 FontSize="25"
                                 Foreground="White"
                                 ForegroundCheckedColor="Yellow"
                                 ForegroundDefaultColor="#20ffffff"
                                 Style="{StaticResource file-pen}"
                                 ToolTip="Create LRC lyrics" />


            <ScrollViewer Grid.Column="1"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Hidden">
                <TextBox VerticalAlignment="Top"
                         Style="{StaticResource LyricsStyle}"
                         Text="{Binding Mode=OneWay}" />
            </ScrollViewer>
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="SyncedLyricsDataTemplate">
        <Grid Margin="5,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>


            <StackPanel Grid.Column="0"
                        Margin="10,5,10,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top">
                <controls:PathButton x:Name="SettingsButton"
                                     HorizontalAlignment="Left"
                                     FontSize="13"
                                     FontWeight="Bold"
                                     ForegroundCheckedColor="White"
                                     ForegroundDefaultColor="#15ffffff"
                                     ForegroundHoverColor="#ccc"
                                     IconCheckedColor="{StaticResource DefaultRedColor}"
                                     IconDefaultColor="#555555"
                                     IconHoverColor="#ccc"
                                     IsChecked="{Binding IsMenuOpened}"
                                     PathStyle="{StaticResource gear}">
                    <controls:PathButton.Style>
                        <Style BasedOn="{StaticResource {x:Type controls:PathButton}}" TargetType="controls:PathButton">
                            <Setter Property="Content" Value="Lyrics" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                    <Setter Property="Content" Value="" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:PathButton.Style>
                </controls:PathButton>

                <Popup AllowsTransparency="True"
                       HorizontalOffset="-10"
                       IsOpen="{Binding ElementName=SettingsButton, Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=SettingsButton}"
                       PopupAnimation="Fade"
                       StaysOpen="{Binding PinMenu}"
                       VerticalOffset="-204">
                    <Border Background="#ee101010"
                            BorderBrush="#95454545"
                            BorderThickness="1"
                            CornerRadius="15">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>


                            <controls:PathButton Margin="12,10,0,8"
                                                 HorizontalAlignment="Left"
                                                 IconCheckedColor="{StaticResource YellowColor}"
                                                 IconHeight="15"
                                                 IconHoverColor="{StaticResource YellowColor}"
                                                 IconWidth="12"
                                                 IsChecked="{Binding PinMenu, Mode=TwoWay}"
                                                 PathStyle="{StaticResource thumbtack}" />

                            <TextBlock Grid.Row="0"
                                       Margin="0,0,15,0"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       FontSize="14"
                                       FontWeight="Bold">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding UpdateStatus, Mode=OneWay}" Value="true">
                                                <Setter Property="Text" Value="Success" />
                                                <Setter Property="Foreground" Value="{StaticResource GreenBrush}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding UpdateStatus, Mode=OneWay}" Value="false">
                                                <Setter Property="Text" Value="Failed" />
                                                <Setter Property="Foreground" Value="{StaticResource DefaultRedBrush}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding UpdateStatus, Mode=OneWay}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <Border Grid.Row="1"
                                    Padding="5"
                                    HorizontalAlignment="Left"
                                    BorderBrush="#95454545"
                                    BorderThickness="0,1,0,0">
                                <StackPanel>
                                    <Grid Margin="0,10,15,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Foreground="#30ffffff"
                                                   Text="Lyrics color" />

                                        <TextBox Grid.Column="1"
                                                 Margin="42,0,5,0"
                                                 Text="{Binding LyricsColor}" />


                                        <controls:PathButton x:Name="color_picker_toggle"
                                                             Grid.Column="2"
                                                             Width="20"
                                                             Height="18"
                                                             HorizontalAlignment="Right"
                                                             Background="{Binding LyricsColor}"
                                                             BorderCheckedColor="{StaticResource DefaultRedColor}"
                                                             BorderDefaultColor="#454545"
                                                             BorderHoverColor="{StaticResource DefaultRedColor}"
                                                             BorderThickness="2"
                                                             EnableBorderAnimation="True" />

                                        <Popup IsOpen="{Binding Path=IsChecked, ElementName=color_picker_toggle}" StaysOpen="False">
                                            <xctk:ColorCanvas Background="#151515"
                                                              BorderBrush="#45ffffff"
                                                              BorderThickness="1"
                                                              SelectedColor="{Binding LyricsColor, Converter={converters:StringToColorConverter}}" />
                                        </Popup>

                                    </Grid>


                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                        <TextBlock Margin="0,0,10,0"
                                                   VerticalAlignment="Bottom"
                                                   FontWeight="Bold"
                                                   Foreground="#30ffffff"
                                                   Text="Adjust lyrics (ms)" />

                                        <numericUpAndDown:NumericUpAndDown VerticalAlignment="Center"
                                                                           FontWeight="Bold"
                                                                           StepSize="500"
                                                                           Value="{Binding TimeAdjustment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <b:Interaction.Behaviors>
                                                <behaviors2:FocusBehavior SetFocusManager="True" />
                                            </b:Interaction.Behaviors>
                                        </numericUpAndDown:NumericUpAndDown>
                                    </StackPanel>

                                    <controls:PathButton Margin="5,15,5,7"
                                                         Padding="55,9"
                                                         HorizontalAlignment="Center"
                                                         Background="#08ffffff"
                                                         BorderDefaultColor="#252525"
                                                         BorderHoverColor="#404040"
                                                         BorderThickness="1"
                                                         Command="{Binding ApplyPernamently}"
                                                         Content="APPLY PERNAMENTLY"
                                                         CornerRadius="5"
                                                         EnableBorderAnimation="True"
                                                         FontWeight="Bold"
                                                         ForegroundDefaultColor="#80ffffff"
                                                         IconCheckedColor="{StaticResource YellowColor}"
                                                         IconDefaultColor="#555555"
                                                         IconHoverColor="{StaticResource BlueColor}"
                                                         IsReadOnly="True"
                                                         PathStyle="{StaticResource Save}" />


                                </StackPanel>

                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=SettingsButton, Path=IsChecked}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <Border Grid.Row="1" Background="#85050505">
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="18"
                                           Text="Saving..." />

                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Border>
                </Popup>

                <controls:PathButton Margin="0,15,0,0"
                                     HorizontalAlignment="Left"
                                     Command="{Binding Edit}"
                                     FontSize="13"
                                     FontWeight="Bold"
                                     ForegroundCheckedColor="White"
                                     ForegroundDefaultColor="#15ffffff"
                                     ForegroundHoverColor="#ccc"
                                     IconDefaultColor="#555555"
                                     IconHoverColor="#ccc"
                                     IconMargin="0 0 11 0"
                                     IsReadOnly="True"
                                     PathStyle="{StaticResource Pencil}"
                                     ToolTip="Edit">
                    <controls:PathButton.Style>
                        <Style BasedOn="{StaticResource {x:Type controls:PathButton}}" TargetType="controls:PathButton">
                            <Setter Property="Content" Value="Edit" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                    <Setter Property="Content" Value="" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:PathButton.Style>
                </controls:PathButton>
            </StackPanel>



            <ListView Grid.Column="1"
                      Margin="0,0,10,0"
                      Background="#05ffffff"
                      BorderThickness="0"
                      ItemsSource="{Binding LinesView}">


                <ListView.Style>
                    <Style TargetType="ListView">

                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ItemsControl">
                                    <Border Background="{TemplateBinding Background}">
                                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
                        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True" />

                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                                            VirtualizingPanel.ScrollUnit="Pixel"
                                                            VirtualizingPanel.VirtualizationMode="Recycling" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Background" Value="Red" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Margin="5">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>

                                                        <StackPanel Margin="10,0" Orientation="Horizontal">
                                                            <TextBox Width="65"
                                                                     HorizontalAlignment="Center"
                                                                     VerticalAlignment="Center"
                                                                     HorizontalContentAlignment="Center"
                                                                     Background="Transparent"
                                                                     BorderThickness="0"
                                                                     FontSize="15"
                                                                     FontWeight="Bold">
                                                                <TextBox.Style>
                                                                    <Style TargetType="TextBox">
                                                                        <Setter Property="Text" Value="{Binding Model.Timestamp, StringFormat={}{0:hh\\:mm\\:ss}}" />
                                                                        <Setter Property="Foreground" Value="#25ffffff" />
                                                                        <Setter Property="FontSize" Value="18" />
                                                                    </Style>
                                                                </TextBox.Style>
                                                            </TextBox>

                                                            <TextBlock Margin="5,0,0,0"
                                                                       VerticalAlignment="Center"
                                                                       FontSize="13"
                                                                       FontWeight="Bold">
                                                                <TextBlock.Text>
                                                                    <MultiBinding Converter="{converters:ExtractMilisecondFromTimeSpanConverter}" StringFormat="{}({0})">
                                                                        <Binding Path="Model.Timestamp" />
                                                                        <Binding Path="DataContext.TimeAdjustment" RelativeSource="{RelativeSource AncestorType=ListView, Mode=FindAncestor}" />
                                                                    </MultiBinding>
                                                                </TextBlock.Text>

                                                                <TextBlock.Style>
                                                                    <Style TargetType="TextBlock">
                                                                        <Setter Property="Foreground" Value="White" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding DataContext.TimeAdjustment, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}}" Value="0">
                                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                            </DataTrigger>

                                                                            <DataTrigger Binding="{Binding DataContext.TimeAdjustment, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=0}" Value="true">
                                                                                <Setter Property="Foreground" Value="#70aacc" />
                                                                            </DataTrigger>

                                                                            <DataTrigger Binding="{Binding DataContext.TimeAdjustment, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=0}" Value="false">
                                                                                <Setter Property="Foreground" Value="#bf213c" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                        </StackPanel>



                                                        <TextBox Grid.Column="1"
                                                                 HorizontalAlignment="Left"
                                                                 HorizontalContentAlignment="Left"
                                                                 Text="{Binding Text, Mode=OneWay}">
                                                            <TextBox.Style>
                                                                <Style BasedOn="{StaticResource LyricsStyle}" TargetType="TextBox">
                                                                    <Setter Property="Foreground" Value="{Binding Path=DataContext.LyricsColor, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}, FallbackValue=#fec827}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsActual}" Value="true">
                                                                            <Setter Property="FontSize" Value="32" />
                                                                            <Setter Property="TextWrapping" Value="Wrap" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Grid>

                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsActual}" Value="true">
                                                                    <Setter Property="Margin" Value="25" />
                                                                    <Setter Property="Padding" Value="0,5,0,5" />
                                                                    <Setter Property="Background" Value="#95000000" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Style>

                <b:Interaction.Behaviors>
                    <behaviors:AutoScrollLyricsBehavior AnimationTime="0:0:0:0.6" StepSize="39" />
                </b:Interaction.Behaviors>
            </ListView>

            <TextBlock Margin="0,0,0,5"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Bottom"
                       FontSize="13"
                       FontWeight="Normal"
                       Foreground="#20ffffff"
                       Text="SYNCED">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <TextBlock Grid.Column="1"
                       MaxWidth="120"
                       Margin="0,0,17,8"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Bottom"
                       FontSize="13"
                       FontWeight="Normal"
                       Foreground="#20ffffff"
                       Text="{Binding Model.By, StringFormat={}by {0}}"
                       TextTrimming="CharacterEllipsis"
                       ToolTip="{Binding Model.By}">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SyncedCreatorLyricsDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Margin="15,10,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel>
                    <controls:PathButton x:Name="SettingsButton"
                                         HorizontalAlignment="Left"
                                         Command="{Binding SaveLRC}"
                                         FontWeight="Bold"
                                         ForegroundDefaultColor="#15ffffff"
                                         ForegroundHoverColor="#ccc"
                                         IconCheckedColor="{StaticResource DefaultRedColor}"
                                         IconDefaultColor="#454545"
                                         IconHoverColor="#80b1ff"
                                         PathStyle="{StaticResource floppy-disk}"
                                         ToolTip="Save">
                        <controls:PathButton.Style>
                            <Style BasedOn="{StaticResource {x:Type controls:PathButton}}" TargetType="controls:PathButton">
                                <Setter Property="Content" Value="Save" />
                                <Setter Property="Margin" Value="0,0,10,0" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                        <Setter Property="Content" Value="" />
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:PathButton.Style>
                    </controls:PathButton>


                    <controls:PathButton Margin="0,10"
                                         HorizontalAlignment="Left"
                                         Command="{Binding ExitLRCEditor}"
                                         CommandParameter="{Binding ActualItem}"
                                         DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentControl, Mode=FindAncestor}, Path=DataContext}"
                                         FontWeight="Bold"
                                         ForegroundDefaultColor="#15ffffff"
                                         ForegroundHoverColor="#ccc"
                                         IconDefaultColor="#454545"
                                         IconHoverColor="{StaticResource DefaultRedColor}"
                                         PathStyle="{StaticResource door-open-path}"
                                         ToolTip="Exit">
                        <controls:PathButton.Style>
                            <Style BasedOn="{StaticResource {x:Type controls:PathButton}}" TargetType="controls:PathButton">
                                <Setter Property="Content" Value="Exit" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                        <Setter Property="Content" Value="" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:PathButton.Style>
                    </controls:PathButton>
                </StackPanel>

                <Border Grid.Row="1" Background="#85050505">
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="18"
                               Text="Saving..." />

                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

            </Grid>

            <TextBlock Grid.Column="0"
                       Margin="15,0,0,8"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Bottom"
                       FontSize="10"
                       FontWeight="Normal"
                       Foreground="#30ffffff"
                       Text="IN&#x0a;CREATOR&#x0a;MODE">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={converters:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>

            </TextBlock>

            <ListView Grid.Column="1"
                      Margin="0,0,0,0"
                      HorizontalAlignment="Left"
                      Background="Transparent"
                      BorderThickness="0"
                      ItemsSource="{Binding Lines}"
                      ScrollViewer.CanContentScroll="False"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <ListView.Style>
                    <Style TargetType="ListView">
                        <Setter Property="Padding" Value="0" />

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ItemsControl">
                                    <Border Background="{TemplateBinding Background}">
                                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
                        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True" />

                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                                            VirtualizingPanel.ScrollUnit="Pixel"
                                                            VirtualizingPanel.VirtualizationMode="Recycling" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>



                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Background" Value="Red" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Margin="5">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>

                                                        <StackPanel Orientation="Horizontal">

                                                            <controls:PathButton Margin="5,0"
                                                                                 Command="{Binding RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}, Path=DataContext.SetActualLine}"
                                                                                 CommandParameter="{Binding}"
                                                                                 IsChecked="{Binding IsActual, Mode=TwoWay}"
                                                                                 IsReadOnly="True"
                                                                                 Style="{StaticResource check-glyph}" />

                                                            <controls:PathButton Margin="5,0"
                                                                                 Command="{Binding SetTime}"
                                                                                 Style="{StaticResource pencil-glyph}" />

                                                            <TextBox Width="115"
                                                                     Margin="5,0"
                                                                     HorizontalAlignment="Center"
                                                                     VerticalAlignment="Center"
                                                                     HorizontalContentAlignment="Center"
                                                                     Background="Transparent"
                                                                     BorderThickness="0"
                                                                     FontWeight="Bold">
                                                                <TextBox.Style>
                                                                    <Style TargetType="TextBox">
                                                                        <Setter Property="Text" Value="{Binding Time, StringFormat={}{0:hh\\:mm\\:ss\\.ff}}" />
                                                                        <Setter Property="Foreground" Value="#aaffffff" />
                                                                        <Setter Property="FontSize" Value="20" />

                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Time}" Value="{x:Null}">
                                                                                <Setter Property="Text" Value="--:--:--.--" />
                                                                                <Setter Property="FontSize" Value="23" />
                                                                                <Setter Property="Foreground" Value="#15ffffff" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBox.Style>
                                                            </TextBox>
                                                        </StackPanel>


                                                        <TextBox Grid.Column="1"
                                                                 HorizontalAlignment="Left"
                                                                 HorizontalContentAlignment="Left"
                                                                 Text="{Binding Text, Mode=OneWay}"
                                                                 TextWrapping="Wrap">
                                                            <TextBox.Style>
                                                                <Style BasedOn="{StaticResource LyricsStyle}" TargetType="TextBox">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsActual}" Value="true">
                                                                            <Setter Property="FontSize" Value="32" />
                                                                            <Setter Property="TextWrapping" Value="Wrap" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Grid>

                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsActual}" Value="true">
                                                                    <Setter Property="Margin" Value="25" />
                                                                    <Setter Property="Padding" Value="0,5,0,5" />
                                                                    <Setter Property="Background" Value="#80000000" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Style>

                <b:Interaction.Behaviors>
                    <behaviors:AutoScrollLyricsBehavior AnimationTime="0:0:0:0.35" StepSize="39" />
                </b:Interaction.Behaviors>
            </ListView>

        </Grid>
    </DataTemplate>


    <Style x:Key="SyncLyricsSubIconStyle" TargetType="Path">
        <Setter Property="Opacity" Value="0.3" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=DataContext.IsPlaying, RelativeSource={RelativeSource AncestorType=ListViewItem, Mode=FindAncestor}}" Value="true">
                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=IconBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="PCloudLyricsDataTemplate">
        <Path Width="10"
              Height="10"
              Margin="-2,-6,0,0"
              ToolTip="PCloud">
            <Path.Style>
                <Style BasedOn="{multistyle:MultiStyle cloud-solid SyncLyricsSubIconStyle}" TargetType="Path">
                    <Setter Property="Fill" Value="#4285f4" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd" />
                                <BeginStoryboard x:Name="HoverStoryboardStart">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                                <BeginStoryboard x:Name="HoverStoryboardEnd">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0.3"
                                                         Duration="0:0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
    </DataTemplate>

    <DataTemplate x:Key="GoogleLyricsDataTemplate">
        <Path Width="10"
              Height="10"
              Margin="-2,-6,0,0"
              ToolTip="Google drive">
            <Path.Style>
                <Style BasedOn="{multistyle:MultiStyle GoogleDrive SyncLyricsSubIconStyle}" TargetType="Path">
                    <Setter Property="Fill" Value="#4285f4" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd" />
                                <BeginStoryboard x:Name="HoverStoryboardStart">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0.75"
                                                         Duration="0:0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                                <BeginStoryboard x:Name="HoverStoryboardEnd">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0.3"
                                                         Duration="0:0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
    </DataTemplate>

    <DataTemplate x:Key="LocalLyricsDataTemplate">
        <Path Width="9"
              Height="9"
              Margin="0,-6,0,0"
              ToolTip="Local file">

            <Path.Style>
                <Style BasedOn="{multistyle:MultiStyle Folder SyncLyricsSubIconStyle}" TargetType="Path">
                    <Setter Property="Fill" Value="#f4d642" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd" />
                                <BeginStoryboard x:Name="HoverStoryboardStart">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                                <BeginStoryboard x:Name="HoverStoryboardEnd">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0.5"
                                                         Duration="0:0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
    </DataTemplate>

    <DataTemplate x:Key="AlbumImageDatatemplate">
        <Grid>

            <Grid VerticalAlignment="Stretch">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0"
                           Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={StaticResource CacheImageConverterLowerQuality}, IsAsync=True}"
                           Stretch="UniformToFill" />

                    <Image Grid.Column="1"
                           Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={StaticResource CacheImageConverterLowerQuality}, IsAsync=True}"
                           Stretch="UniformToFill" />
                </Grid>

                <Grid Opacity="1">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="1,0" EndPoint="0 0">
                            <GradientStop Offset="1" Color="#FF000000" />
                            <GradientStop Offset="0.5" Color="#00000000" />
                            <GradientStop Offset="0.0" Color="#00000000" />
                            <GradientStop Offset="0.0" Color="#FF000000" />
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>

                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="0 0">
                            <GradientStop Offset="1" Color="#5A000000" />
                            <GradientStop Offset="0.6" Color="#5A000000" />
                            <GradientStop Offset="0.05" Color="#5A000000" />
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>
            </Grid>


            <Border Margin="0,15,0,15"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Panel.ZIndex="0"
                    BorderBrush="#FF080808"
                    BorderThickness="5">
                <Image Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={StaticResource CacheImageConverter}, IsAsync=True}" />

                <Border.Effect>
                    <DropShadowEffect BlurRadius="20"
                                      Direction="0"
                                      ShadowDepth="15" />
                </Border.Effect>
            </Border>

            <Grid Grid.Row="0">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0 0">
                        <GradientStop Offset="1" Color="#2A000000" />
                        <GradientStop Offset="0.85" Color="#00000000" />
                        <GradientStop Offset="0.15" Color="#00000000" />
                        <GradientStop Offset="0.0" Color="#2A000000" />
                    </LinearGradientBrush>
                </Grid.Background>
            </Grid>

            <Grid>
                <Grid.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="0 1">
                        <GradientStop Offset="1" Color="#80000000" />
                        <GradientStop Offset="0.65" Color="#00000000" />
                        <GradientStop Offset="0.35" Color="#00000000" />
                        <GradientStop Offset="0.0" Color="#80000000" />
                    </LinearGradientBrush>
                </Grid.Background>
            </Grid>
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="GifImageDatatemplate">
        <Grid>
            <Image Name="Image"
                   behaviors1:ImageBehavior.AnimatedSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.RandomGifUrl}"
                   Stretch="Uniform" />

            <Grid Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>


                <StackPanel Margin="80,10,0,0"
                            VerticalAlignment="Top"
                            Orientation="Horizontal">
                    <TextBlock Text="GIF tag: " />
                    <TextBox Margin="0,-10,0,0"
                             Text="AHoj"
                             Visibility="Visible" />
                </StackPanel>

                <controls:ButtonWithIcon Grid.Column="1"
                                         Margin="25"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.NextGif}"
                                         Content="Next GIF"
                                         IconHeight="30"
                                         IconMargin="0 0 5 0"
                                         IconPathStyle="{StaticResource NextInCircle}"
                                         IconWidth="30" />
            </Grid>

        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="TextLyricsIconDataTemplate">
        <controls:ButtonWithIcon Margin="1,0,0,0"
                                 Padding="0"
                                 HorizontalAlignment="Left"
                                 IconHeight="11"
                                 IconPathStyle="{StaticResource TextLyrics}"
                                 IconWidth="11"
                                 ToolTip="Lyrics">
            <controls:ButtonWithIcon.Style>
                <Style BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}" TargetType="{x:Type controls:ButtonWithIcon}">
                    <Setter Property="IconHoverColor" Value="#59ad55" />
                    <Setter Property="IconDefaultColor" Value="#2b5229" />
                    <Setter Property="Opacity" Value="1" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="IconHoverColor" Value="#522e05" />
                            <Setter Property="IconDefaultColor" Value="#FF050505" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:ButtonWithIcon.Style>

        </controls:ButtonWithIcon>
    </DataTemplate>

    <DataTemplate x:Key="SyncedLyricsIconDataTemplate">
        <controls:ButtonWithIcon Margin="0,0,0,-3"
                                 Padding="0"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Center"
                                 IconHeight="11"
                                 IconPathStyle="{StaticResource Microphone}"
                                 IconWidth="11"
                                 ToolTip="Synced lyrics">

            <controls:ButtonWithIcon.Style>
                <Style BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}" TargetType="{x:Type controls:ButtonWithIcon}">
                    <Setter Property="IconHoverColor" Value="#aaa" />
                    <Setter Property="IconDefaultColor" Value="#353535" />
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Margin" Value="0,0,0,0" />
                    <Setter Property="Cursor" Value="Hand" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls:ButtonWithIcon}">
                                <Border Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        Margin="{TemplateBinding Margin}"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        Background="{TemplateBinding Background}">
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>

                                        <Path Name="ButtonIcon"
                                              Width="{TemplateBinding IconWidth}"
                                              Height="{TemplateBinding IconHeight}"
                                              Margin="0"
                                              Fill="{TemplateBinding IconBrush}"
                                              Style="{TemplateBinding IconPathStyle}" />


                                        <ContentControl Grid.Row="1"
                                                        Grid.Column="1"
                                                        Width="9"
                                                        Height="4"
                                                        BorderThickness="0"
                                                        Content="{Binding Provider}"
                                                        ContentTemplateSelector="{StaticResource LyricsProviderTemplateSelector}" />


                                    </Grid>

                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseEnter">
                                            <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateHoverColor}" />
                                        </b:EventTrigger>

                                        <b:EventTrigger EventName="MouseLeave">
                                            <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateDefaultColor}" />
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>

                                </Border>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.IsPlaying, RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}}" Value="true">
                            <Setter Property="IconHoverColor" Value="#42382c" />
                            <Setter Property="IconDefaultColor" Value="#404040" />
                        </DataTrigger>


                    </Style.Triggers>

                </Style>
            </controls:ButtonWithIcon.Style>
        </controls:ButtonWithIcon>
    </DataTemplate>

    <DataTemplate x:Key="LRCEditorIconDataTemplate">
        <controls:PathButton FontSize="13"
                             IsHitTestVisible="False"
                             Style="{StaticResource pencil-glyph}" />
    </DataTemplate>

    <DataTemplate x:Key="DisabledLyricsIconDataTemplate">
        <controls:PathButton IconHeight="13"
                             IconWidth="13"
                             IsReadOnly="True"
                             PathStyle="{StaticResource text-slash-solid}"
                             ToolTip="Automatic download is DISABLED">
            <controls:PathButton.Style>
                <Style BasedOn="{StaticResource {x:Type controls:PathButton}}" TargetType="controls:PathButton">
                    <Setter Property="IconDefaultColor" Value="#454545" />
                    <Setter Property="IconHoverColor" Value="{StaticResource DefaultRedColor}" />
                    <Setter Property="Opacity" Value="0.85" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="IconDefaultColor" Value="#454545" />
                            <Setter Property="IconHoverColor" Value="#151515" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:PathButton.Style>
        </controls:PathButton>
    </DataTemplate>

    <templateSelectors:LyricsTemplateSelector x:Key="LyricsTemplateSelector"
                                              CreatingLRC="{StaticResource SyncedCreatorLyricsDataTemplate}"
                                              DisabledLyrics="{x:Null}"
                                              LyricsDataTemplate="{StaticResource LyricsDataTemplate}"
                                              SyncLyricsDataTemplate="{StaticResource SyncedLyricsDataTemplate}" />

    <templateSelectors:LyricsProviderTemplateSelector x:Key="LyricsProviderTemplateSelector"
                                                      GoogleDataTemplate="{StaticResource GoogleLyricsDataTemplate}"
                                                      LocalDataTemplate="{StaticResource LocalLyricsDataTemplate}"
                                                      PCloudDataTemplate="{StaticResource PCloudLyricsDataTemplate}" />

    <templateSelectors:SongImageTemplateSelector x:Key="SongImageTemplateSelector"
                                                 AlbumDataTemplate="{StaticResource AlbumImageDatatemplate}"
                                                 GifDataTemplate="{StaticResource GifImageDatatemplate}" />


    <templateSelectors:LyricsTemplateSelector x:Key="LyricsIconTypeTemplateSelector"
                                              CreatingLRC="{StaticResource LRCEditorIconDataTemplate}"
                                              DisabledLyrics="{StaticResource DisabledLyricsIconDataTemplate}"
                                              LyricsDataTemplate="{StaticResource TextLyricsIconDataTemplate}"
                                              SyncLyricsDataTemplate="{StaticResource SyncedLyricsIconDataTemplate}" />



    <DataTemplate x:Key="PlayListSoundDataTemplate">
        <Grid Background="Transparent">
            <Border Padding="0,0,5,5">
                <Grid VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="22,01,0,0" Text="Downloading info...">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="Foreground" Value="#555555" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDownloading}" Value="true">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                        <Setter Property="Foreground" Value="#101010" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>


                    <Grid Grid.Column="1" Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Grid Width="60"
                              Margin="0,0,10,3"
                              HorizontalAlignment="Right">
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}" TargetType="controls:ButtonWithIcon">
                                    <Setter Property="IconHeight" Value="11" />
                                    <Setter Property="IconWidth" Value="11" />
                                </Style>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <controls:PathButton Grid.Column="0"
                                                 Margin="0,0,0,0"
                                                 HorizontalAlignment="Left"
                                                 VerticalAlignment="Center"
                                                 Panel.ZIndex="1"
                                                 IconHeight="13"
                                                 IconWidth="13"
                                                 IsChecked="{Binding IsFavorite}"
                                                 PathStyle="{StaticResource Favorite}"
                                                 ToolTip="Favorite">
                                <controls:PathButton.Style>
                                    <Style BasedOn="{StaticResource {x:Type controls:PathButton}}" TargetType="controls:PathButton">
                                        <Setter Property="IconDefaultColor" Value="#10ffffff" />
                                        <Setter Property="IconHoverColor" Value="#8fd4f2" />
                                        <Setter Property="IconCheckedColor" Value="#aa39b2e6" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                <Setter Property="IconDefaultColor" Value="#30522e05" />
                                                <Setter Property="IconHoverColor" Value="#79b1c9" />
                                                <Setter Property="IconCheckedColor" Value="#39b2e6" />
                                            </DataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </controls:PathButton.Style>
                            </controls:PathButton>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>

            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding DeleteItemFromPlaylist}" Header="Remove song from playlist" />
                    <MenuItem Command="{Binding DeleteSongFromPlaylistWithAlbum}" Header="Remove album from playlist" />

                    <MenuItem IsHitTestVisible="False" />

                    <MenuItem Command="{Binding OpenContainingFolder}" Header="Open folder" />
                </ContextMenu>
            </Grid.ContextMenu>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PlayListSongDataTemplate">
        <Grid Background="Transparent">
            <Border Padding="0,0,0,5">
                <Grid VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="22,1,0,0" Text="Downloading info...">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="Foreground" Value="#555555" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDownloading}" Value="true">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                        <Setter Property="Foreground" Value="#101010" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Margin="5,0,0,0" FontSize="12">
                        <Run FontSize="13" Text="{Binding ArtistViewModel.Name, Mode=OneWay}">
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Setter Property="Foreground" Value="#f2e0cb" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                            <Setter Property="Foreground" Value="#24140c" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run>

                        <Run Text="{Binding AlbumViewModel.Name, Mode=OneWay, StringFormat={}({0})}">
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Setter Property="Foreground" Value="#edfffa" />
                                    <Setter Property="FontWeight" Value="DemiBold" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                            <Setter Property="Foreground" Value="#24140c" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run>

                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{StaticResource OrangeBrush}" />
                                <Setter Property="Opacity" Value="0.35" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                        <Setter Property="Opacity" Value="0.75" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Grid Grid.Column="1" Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Grid Width="50"
                              Margin="0,0,10,3"
                              HorizontalAlignment="Right">
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}" TargetType="controls:ButtonWithIcon">
                                    <Setter Property="IconHeight" Value="11" />
                                    <Setter Property="IconWidth" Value="11" />
                                </Style>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <controls:PathButton Grid.Column="0"
                                                 Margin="5,0,0,0"
                                                 HorizontalAlignment="Right"
                                                 VerticalAlignment="Center"
                                                 Panel.ZIndex="1"
                                                 IconCheckedColor="#39b2e6"
                                                 IconHeight="13"
                                                 IconHoverColor="#39b2e6"
                                                 IconWidth="13"
                                                 IsChecked="{Binding IsFavorite}"
                                                 Opacity="0.55"
                                                 PathStyle="{StaticResource Favorite}"
                                                 ToolTip="Favorite">
                                <controls:PathButton.Style>
                                    <Style BasedOn="{StaticResource {x:Type controls:PathButton}}" TargetType="controls:PathButton">
                                        <Setter Property="IconDefaultColor" Value="#20ffffff" />

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                <Setter Property="IconDefaultColor" Value="#60522e05" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:PathButton.Style>
                            </controls:PathButton>

                            <Grid Grid.Column="1" HorizontalAlignment="Left">


                                <ContentPresenter Content="{Binding LyricsObject}" ContentTemplateSelector="{StaticResource LyricsIconTypeTemplateSelector}" />



                            </Grid>


                        </Grid>

                        <controls:ButtonWithIcon Grid.Column="1"
                                                 Margin="0,0,0,0"
                                                 Padding="0"
                                                 HorizontalAlignment="Right"
                                                 Command="{Binding Refresh}"
                                                 IconHeight="12"
                                                 IconPathStyle="{StaticResource Repeate}"
                                                 IconWidth="12"
                                                 ToolTip="Reload lyrics">
                            <controls:ButtonWithIcon.Style>
                                <Style BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}" TargetType="{x:Type controls:ButtonWithIcon}">
                                    <Setter Property="IconHoverColor" Value="Gold" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                            <Setter Property="IconHoverColor" Value="#522e05" />
                                            <Setter Property="IconDefaultColor" Value="#FF151515" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:ButtonWithIcon.Style>
                        </controls:ButtonWithIcon>
                    </Grid>
                </Grid>
            </Border>

            <Grid.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Resources>
                        <Style BasedOn="{StaticResource {x:Type controls:PathButton}}" TargetType="controls:PathButton">
                            <Setter Property="Width" Value="280" />
                            <Setter Property="Margin" Value="-17,-5,-23,-6" />
                            <Setter Property="IconWidth" Value="18" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="IconHeight" Value="18" />
                            <Setter Property="IconMargin" Value="0 0 20 0" />
                            <Setter Property="Padding" Value="15,9" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="HorizontalIconAlignment" Value="Left" />
                            <Setter Property="ForegroundDefaultColor" Value="#656565" />
                            <Setter Property="IsReadOnly" Value="True" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Style>
                    </ContextMenu.Resources>
                    <MenuItem>
                        <MenuItem.HeaderTemplate>
                            <DataTemplate>
                                <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu, Mode=FindAncestor}, Path=DataContext}">
                                    <controls:PathButton Command="{Binding DeleteItemFromPlaylist}"
                                                         Content="Remove SONG from playlist"
                                                         PathStyle="{StaticResource layer-minus}"
                                                         ToolTip="Removes SINGLE SONG from playlist">

                                        <b:Interaction.Behaviors>
                                            <buttons:CloseContextMenuOnClickBehavior />
                                        </b:Interaction.Behaviors>
                                    </controls:PathButton>
                                </Grid>
                            </DataTemplate>
                        </MenuItem.HeaderTemplate>
                    </MenuItem>

                    <MenuItem>
                        <MenuItem.HeaderTemplate>
                            <DataTemplate>
                                <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu, Mode=FindAncestor}, Path=DataContext}">
                                    <controls:PathButton Command="{Binding DeleteSongFromPlaylistWithAlbum}"
                                                         Content="Remove song's ALBUM from playlist"
                                                         IconHeight="16"
                                                         PathStyle="{StaticResource TrashList}"
                                                         ToolTip="Removes ALL SONGS in ALBUM from playlist">
                                        <b:Interaction.Behaviors>
                                            <buttons:CloseContextMenuOnClickBehavior />
                                        </b:Interaction.Behaviors>
                                    </controls:PathButton>
                                </Grid>
                            </DataTemplate>
                        </MenuItem.HeaderTemplate>
                    </MenuItem>

                    <Separator Margin="5,5" />

                    <MenuItem ToolTip="{Binding IsAutomaticLyricsDownloadDisabled}">
                        <MenuItem.HeaderTemplate>
                            <DataTemplate>
                                <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu, Mode=FindAncestor}, Path=DataContext}">
                                    <controls:PathButton Content="Automatic lyrics download"
                                                         ForegroundCheckedColor="#ddd"
                                                         IconCheckedColor="{StaticResource DefaultRedColor}"
                                                         IsChecked="{Binding IsAutomaticLyricsDownloadDisabled, Mode=TwoWay}"
                                                         IsReadOnly="False"
                                                         PathStyle="{StaticResource text-slash}"
                                                         ToolTip="Turn ON/OFF automatic LYRICS download">

                                        <b:Interaction.Behaviors>
                                            <buttons:CloseContextMenuOnClickBehavior />
                                        </b:Interaction.Behaviors>
                                    </controls:PathButton>
                                </Grid>
                            </DataTemplate>
                        </MenuItem.HeaderTemplate>
                    </MenuItem>

                    <Separator Margin="5,5" />

                    <MenuItem>
                        <MenuItem.HeaderTemplate>
                            <DataTemplate>
                                <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu, Mode=FindAncestor}, Path=DataContext}">
                                    <controls:PathButton Command="{Binding OpenContainingFolder}"
                                                         Content="Open containing folder"
                                                         IconHeight="14"
                                                         PathStyle="{StaticResource FolderOpen}"
                                                         ToolTip=" Opens containing folder in filebrowser">

                                        <b:Interaction.Behaviors>
                                            <buttons:CloseContextMenuOnClickBehavior />
                                        </b:Interaction.Behaviors>
                                    </controls:PathButton>
                                </Grid>
                            </DataTemplate>
                        </MenuItem.HeaderTemplate>
                    </MenuItem>
                </ContextMenu>
            </Grid.ContextMenu>
        </Grid>
    </DataTemplate>

</ResourceDictionary>