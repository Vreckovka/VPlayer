<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:VCore.Converters;assembly=VCore"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:library="clr-namespace:VPlayer.Library;assembly=VPlayer.Library"
                    xmlns:text="clr-namespace:VCore.Behaviors.Text;assembly=VCore"
                    xmlns:templateSelectors="clr-namespace:VPlayer.WindowsPlayer.TemplateSelectors"
                    xmlns:controls="clr-namespace:VCore.Controls;assembly=VCore">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/VPlayer;component/StylesDictionaries/ControlsTemplates/ButtonWithIconTemplate.xaml" />
  </ResourceDictionary.MergedDictionaries>


  <Style x:Key="ListViewItem_PlayerTrack" TargetType="{x:Type ListViewItem}">
    <Setter Property="Foreground" Value="{StaticResource 100_WhiteTransparentBrush}" />
    <Setter Property="FontFamily" Value="Arial" />
    <Setter Property="FontWeight" Value="Light" />
    <Setter Property="Height" Value="50" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border x:Name="Bd"
                  Padding="0,5,8,0"
                  Background="{TemplateBinding Background}">
            <Border.ContextMenu>
              <ContextMenu>
                <MenuItem Header="Delete song from playlist" Command="{Binding DeleteSongFromPlaylist}"/>
                <MenuItem Header="Delete song album from playlist" Command="{Binding DeleteSongFromPlaylistWithAlbum}"/>
              </ContextMenu>
            </Border.ContextMenu>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="20"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
              </Grid.ColumnDefinitions>

              <Button Margin="8,0"
                      Grid.RowSpan="2"
                      Command="{Binding Play}"
                      Style="{StaticResource PlayMini}" />
              <Grid Name="Container"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ClipToBounds="True">
                <Grid.Resources>
                  <Style x:Key="ListViewTextBlockStyle" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="Text" Value="{Binding Name}" />
                    <Setter Property="Foreground" Value="#decfca"/>
                  </Style>
                </Grid.Resources>

                <TextBlock Name="NonPlayingTextBlock"
                           FontSize="18"
                           FontWeight="Bold"
                           Padding="0"
                           FontFamily="{StaticResource Roboto}"
                           Style="{StaticResource ListViewTextBlockStyle}">
                
                  <i:Interaction.Behaviors>
                    <text:PanningTextWithFontSizeBehavior BiggerFontSize="21"
                                                          Container="{Binding ElementName=Bd}"
                                                          IgnoreSizeAnimation="{Binding IsPlaying}"
                                                          IsMouseOverRelativeToContainer="True" />
                  </i:Interaction.Behaviors>
                </TextBlock>

                <TextBlock Name="PlayingTextBlock" FontFamily="{StaticResource Roboto}" 
                           FontWeight="Bold" 
                           >
                  <TextBlock.Style>
                    <Style BasedOn="{StaticResource ListViewTextBlockStyle}" TargetType="TextBlock">
                      <Setter Property="FontSize" Value="21" />
                      <Setter Property="Visibility" Value="Hidden" />

                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="Foreground" Value="#24140c" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                  <i:Interaction.Behaviors>
                    <text:PanningTextWithFontSizeBehavior BiggerFontSize="21"
                                                          Container="{Binding ElementName=Container}"
                                                          IgnoreSizeAnimation="{Binding IsPlaying}"
                                                          IsMouseOverRelativeToContainer="True" />
                  </i:Interaction.Behaviors>
                </TextBlock>


             
              </Grid>

              <TextBlock   Grid.Row="1" 
                           Grid.Column="1"
                           FontSize="12" 
                           FontFamily="{StaticResource Roboto}" 
                           >
                  <Run Text="{Binding ArtistViewModel.Name, Mode=OneWay}" FontSize="13">
                    <Run.Style>
                      <Style TargetType="Run">
                        <Setter Property="Foreground" Value="#f2e0cb" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <!--<Setter Property="Foreground" Value="#e8c59e" />-->
                            <Setter Property="Foreground" Value="#24140c" />
                            <Setter Property="FontWeight" Value="Bold" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Run.Style>
                  </Run>
                  <Run Text="{Binding AlbumViewModel.Name, Mode=OneWay, StringFormat={}({0})}">
                    <Run.Style>
                      <Style TargetType="Run">
                        <Setter Property="Foreground" Value="#edfffa" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <!--<Setter Property="Foreground" Value="White" />-->
                            <Setter Property="Foreground" Value="#24140c" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Run.Style>
                  </Run>

                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{StaticResource OrangeBrush}" />
                    <Setter Property="Opacity" Value="0.35"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Opacity" Value="0.75" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <TextBlock Name="DurationTextBlock"
                         Grid.Column="2"
                         Margin="0,5,0,0"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Top"
                         FontWeight="Bold"
                         FontSize="13"
                         FontFamily="{StaticResource Roboto}"
                         Text="{Binding Duration, Converter={converters:TimeConverter TimeType=Second}}" >
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Setter Property="Opacity" Value="0.35"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Opacity" Value="0.75" />
                         <Setter Property="Foreground" Value="Black" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <Grid   Grid.Column="2" 
                      Grid.Row="1" >

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5 0 15 0">
                  <controls:ButtonWithIcon IconPathStyle="{StaticResource TextLyrics}" 
                                           HorizontalAlignment="Right"
                                           IconHeight="11"
                                           IconWidth="11"
                                           ToolTip="Lyrics"
                                           Command="{Binding Refresh}"
                  >
                    <controls:ButtonWithIcon.Style>
                      <Style TargetType="{x:Type controls:ButtonWithIcon}" 
                             BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
                        <Setter Property="IconHoverColor" Value="#59ad55"/>
                        <Setter Property="IconDefaultColor" Value="#2b5229"/>
                        <Setter Property="Opacity" Value="1"/>
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="IconHoverColor" Value="#522e05"/>
                            <Setter Property="IconDefaultColor" Value="Black"/>
                          </DataTrigger>

                          <DataTrigger Binding="{Binding Lyrics}" Value="{x:Null}">
                            <Setter Property="Opacity" Value="0"/>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                          </DataTrigger>

                          <DataTrigger Binding="{Binding Lyrics}" Value="">
                            <Setter Property="Opacity" Value="0"/>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                          </DataTrigger>

                        </Style.Triggers>
                      </Style>
                    </controls:ButtonWithIcon.Style>

                  </controls:ButtonWithIcon>

                  <controls:ButtonWithIcon IconPathStyle="{StaticResource Microphone}" 
                                           HorizontalAlignment="Right"
                                           IconHeight="11"
                                           IconWidth="11"
                                           ToolTip="Synced lyrics"
                                           Command="{Binding Refresh}"
                  >
                    <controls:ButtonWithIcon.Style>
                      <Style TargetType="{x:Type controls:ButtonWithIcon}" 
                             BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
                        <Setter Property="IconHoverColor" Value="#40a8e6"/>
                        <Setter Property="IconDefaultColor" Value="#27404f"/>
                        <Setter Property="Opacity" Value="1"/>
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="IconHoverColor" Value="#522e05"/>
                            <Setter Property="IconDefaultColor" Value="Black"/>
                          </DataTrigger>

                          <DataTrigger Binding="{Binding LRCFile}" Value="{x:Null}">
                            <Setter Property="Opacity" Value="0"/>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </controls:ButtonWithIcon.Style>

                  </controls:ButtonWithIcon>
                </StackPanel>

                <controls:ButtonWithIcon IconPathStyle="{StaticResource Repeate}" 
                                        Grid.Column="1"
                                         HorizontalAlignment="Right"
                                        IconHeight="11"
                                         IconWidth="11"
                                         ToolTip="Reload data"
                                         Command="{Binding Refresh}"
                >
                  <controls:ButtonWithIcon.Style>
                    <Style TargetType="{x:Type controls:ButtonWithIcon}" 
                           BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
                      <Setter Property="IconHoverColor" Value="Gold"/>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="IconHoverColor" Value="#522e05"/>
                          <Setter Property="IconDefaultColor" Value="Black"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </controls:ButtonWithIcon.Style>

                </controls:ButtonWithIcon>

              </Grid>
           
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding IsPlaying}" Value="False" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard Name="As">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#07cfbeb8"
                                    Duration="0:0:.10" />

                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    From="{StaticResource 235_DefaultWhiteColor}"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0.1" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="As" />
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:.10" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>

            <Trigger Property="IsSelected" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="A">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#15cfbeb8"
                                    Duration="0:0:0:0.2" />

                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    From="{StaticResource 200_DefaultWhiteColor}"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0.1" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>

              <Trigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <RemoveStoryboard BeginStoryboardName="As" />
                <BeginStoryboard x:Name="B">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
              <Setter TargetName="NonPlayingTextBlock" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PlayingTextBlock" Property="Visibility" Value="Visible" />
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard x:Name="A1">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    To="{StaticResource 235_DefaultWhiteColor}"
                                    Duration="0:0:0:0.2" />
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#decfca"
                                    Duration="0:0:0:0.2" />
                    <DoubleAnimation Storyboard.TargetName="PlayingTextBlock"
                                     Storyboard.TargetProperty="(TextBlock.FontSize)"
                                     To="21"
                                     Duration="0:0:0:0.2" />
                    <DoubleAnimation Storyboard.TargetName="DurationTextBlock"
                                     Storyboard.TargetProperty="(TextBlock.FontSize)"
                                     To="16"
                                     Duration="0:0:0:0.2" />

                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A1" />
              </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="False">
              <Setter TargetName="NonPlayingTextBlock" Property="Visibility" Value="Visible" />
              <Setter TargetName="PlayingTextBlock" Property="Visibility" Value="Hidden" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="WindowsPlayerSongs" TargetType="ListView">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItem_PlayerTrack}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListView">
          <Border Background="{TemplateBinding Background}">
            <ScrollViewer>
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



</ResourceDictionary>