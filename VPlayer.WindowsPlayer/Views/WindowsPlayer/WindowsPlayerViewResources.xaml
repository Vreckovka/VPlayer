<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachedProperties1="clr-namespace:VCore.AttachedProperties;assembly=VCore.WPF"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:behaviors="clr-namespace:VPlayer.Player.Behaviors"
                    xmlns:behaviors1="clr-namespace:VPlayer.WindowsPlayer.Behaviors"
                    xmlns:clients="clr-namespace:VPlayer.AudioStorage.InfoDownloader.LRC.Clients;assembly=VPlayer.AudioStorage"
                    xmlns:controls1="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
                    xmlns:controls2="clr-namespace:VCore.Controls;assembly=VCore.WPF"
                    xmlns:converters1="clr-namespace:VCore.Converters;assembly=VCore.WPF"
                    xmlns:e="http://schemas.epsiloner.git/wpf/"
                    xmlns:library="clr-namespace:VPlayer.Library;assembly=VPlayer.Core"
                    xmlns:lrc="clr-namespace:VPlayer.AudioStorage.InfoDownloader.LRC;assembly=VCore.WPF"
                    xmlns:templateSelectors="clr-namespace:VPlayer.WindowsPlayer.TemplateSelectors"
                    xmlns:text1="clr-namespace:VCore.Behaviors.Text;assembly=VCore.WPF"
                    xmlns:windowsPlayer="clr-namespace:VPlayer.Player.Views.WindowsPlayer">


  <Style x:Key="LyricsStyle" TargetType="TextBox">
    <Setter Property="FontSize" Value="24" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Foreground" Value="{StaticResource YellowBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource Roboto}" />
    <Setter Property="FontWeight" Value="DemiBold" />
    <Setter Property="IsReadOnly" Value="True" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="0.05"
                          RenderingBias="Quality"
                          ShadowDepth="5" />
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="LyricsDataTemplate">
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
      <TextBox Style="{StaticResource LyricsStyle}" Text="{Binding Mode=OneWay}" />
    </ScrollViewer>
  </DataTemplate>

  <DataTemplate x:Key="SyncedLyricsDataTemplate">
    <Grid>
      <TextBlock Margin="15,8"
                 VerticalAlignment="Bottom"
                 FontFamily="{StaticResource Roboto}"
                 FontSize="13"
                 FontWeight="Normal"
                 Foreground="#30ffffff"
                 Text="SYNCED" />
      <ListView Background="Transparent"
                BorderThickness="0"
                ItemsSource="{Binding Lines}"
                ScrollViewer.CanContentScroll="False"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Hidden">
        <ListView.Style>
          <Style TargetType="ListView">
            <Setter Property="Padding" Value="0" />
            <Setter Property="ItemContainerStyle">
              <Setter.Value>
                <Style TargetType="ListViewItem">
                  <Setter Property="Background" Value="Red" />
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Margin="0">
                          <TextBox Text="{Binding Text, Mode=OneWay}">
                            <TextBox.Style>
                              <Style BasedOn="{StaticResource LyricsStyle}" TargetType="TextBox">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding IsActual}" Value="true">
                                    <Setter Property="FontSize" Value="32" />
                                    <Setter Property="Margin" Value="25" />
                                    <Setter Property="Padding" Value="10" />
                                    <Setter Property="Background" Value="#80000000" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </TextBox.Style>
                          </TextBox>
                        </Border>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Setter.Value>
            </Setter>
          </Style>
        </ListView.Style>

        <b:Interaction.Behaviors>
          <behaviors:AutoScrollLyricsBehavior AnimationTime="0:0:0:0.6" StepSize="29" />
        </b:Interaction.Behaviors>
      </ListView>

      <StackPanel Width="100"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center">

        <TextBlock Text="Adjust lyrics (ms)" />
        <TextBox Text="{Binding TimeAdjustment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
        <Button Width="70"
                Margin="5"
                Command="{Binding ApplyPernamently}"
                Content="Update" />
      </StackPanel>
    </Grid>
  </DataTemplate>

  <Style x:Key="SyncLyricsSubIconStyle" TargetType="Path">
    <Setter Property="Opacity" Value="0.3" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls2:ButtonWithIcon}, Path=DataContext.IsPlaying}" Value="true">
        <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=controls2:ButtonWithIcon}, Path=IconBrush}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>


  <DataTemplate x:Key="GoogleLyricsDataTemplate">
    <Path Width="10"
          Height="10"
          Margin="-2,-6,0,0"
          ToolTip="Google drive">
      <Path.Style>
        <Style BasedOn="{attachedProperties1:MultiStyle GoogleDrive SyncLyricsSubIconStyle}" TargetType="Path">
          <Setter Property="Fill" Value="#4285f4" />

          <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls2:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd" />
                <BeginStoryboard x:Name="HoverStoryboardStart">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="0.75"
                                     Duration="0:0:0:0.15" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>

              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                <BeginStoryboard x:Name="HoverStoryboardEnd">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="0.3"
                                     Duration="0:0:0:0.15" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Path.Style>
    </Path>
  </DataTemplate>

  <DataTemplate x:Key="LocalLyricsDataTemplate">
    <Path Width="9"
          Height="9"
          Margin="0,-6,0,0"
          ToolTip="Local file">

      <Path.Style>
        <Style BasedOn="{attachedProperties1:MultiStyle Folder SyncLyricsSubIconStyle}" TargetType="Path">
          <Setter Property="Fill" Value="#f4d642" />

          <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls2:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd" />
                <BeginStoryboard x:Name="HoverStoryboardStart">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0:0:0:0.15" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>

              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                <BeginStoryboard x:Name="HoverStoryboardEnd">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="0.5"
                                     Duration="0:0:0:0.15" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Path.Style>
    </Path>
  </DataTemplate>

  <DataTemplate x:Key="AlbumImageDatatemplate">
    <Grid>
      <Grid VerticalAlignment="Stretch">

        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Image Grid.Column="0"
                 Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={library:CacheImageConverter}}"
                 Stretch="UniformToFill" />

          <Image Grid.Column="1"
                 Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={library:CacheImageConverter}}"
                 Stretch="UniformToFill" />
        </Grid>

        <Grid>
          <Grid.Background>
            <LinearGradientBrush StartPoint="1,0" EndPoint="0 0">
              <GradientStop Offset="1" Color="#FF000000" />
              <GradientStop Offset="0.5" Color="#00000000" />
              <GradientStop Offset="0.0" Color="#00000000" />
              <GradientStop Offset="0.0" Color="#FF000000" />
            </LinearGradientBrush>
          </Grid.Background>
        </Grid>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
          <Grid.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="0 0">
              <GradientStop Offset="1" Color="#5A000000" />
              <GradientStop Offset="0.6" Color="#5A000000" />
              <GradientStop Offset="0.05" Color="#5A000000" />
            </LinearGradientBrush>
          </Grid.Background>
        </Grid>
      </Grid>


      <Border Margin="0,15,0,15"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Panel.ZIndex="0"
              BorderBrush="#FF080808"
              BorderThickness="5">
        <Image Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.ActualItem.ImagePath, Converter={library:CacheImageConverter}}" />

        <Border.Effect>
          <DropShadowEffect BlurRadius="20"
                            Direction="0"
                            ShadowDepth="15" />
        </Border.Effect>
      </Border>

      <Grid Grid.Row="0">
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="0 0">
            <GradientStop Offset="1" Color="#2A000000" />
            <GradientStop Offset="0.85" Color="#00000000" />
            <GradientStop Offset="0.15" Color="#00000000" />
            <GradientStop Offset="0.0" Color="#2A000000" />
          </LinearGradientBrush>
        </Grid.Background>
      </Grid>

      <Grid>
        <Grid.Background>
          <LinearGradientBrush StartPoint="1,0" EndPoint="0 1">
            <GradientStop Offset="1" Color="#80000000" />
            <GradientStop Offset="0.65" Color="#00000000" />
            <GradientStop Offset="0.35" Color="#00000000" />
            <GradientStop Offset="0.0" Color="#80000000" />
          </LinearGradientBrush>
        </Grid.Background>
      </Grid>
    </Grid>

  </DataTemplate>

  <DataTemplate x:Key="GifImageDatatemplate">
    <Grid>
      <Image Name="Image"
             behaviors1:ImageBehavior.AnimatedSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.RandomGifUrl}"
             Stretch="Uniform" />

      <Grid Grid.RowSpan="2">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>


        <StackPanel Margin="80,10,0,0"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">
          <TextBlock Text="GIF tag: " />
          <TextBox Margin="0,-10,0,0"
                   Text="AHoj"
                   Visibility="Visible" />
        </StackPanel>

        <controls2:ButtonWithIcon Grid.Column="1"
                                  Margin="25"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windowsPlayer:WindowsPlayerView}, Path=DataContext.NextGif}"
                                  Content="Next GIF"
                                  IconHeight="30"
                                  IconMargin="0 0 5 0"
                                  IconPathStyle="{StaticResource NextInCircle}"
                                  IconWidth="30" />
      </Grid>

    </Grid>

  </DataTemplate>

  <templateSelectors:LyricsTemplateSelector x:Key="LyricsTemplateSelector"
                                            LyricsDataTemplate="{StaticResource LyricsDataTemplate}"
                                            SyncLyricsDataTemplate="{StaticResource SyncedLyricsDataTemplate}" />

  <templateSelectors:LyricsProviderTemplateSelector x:Key="LyricsProviderTemplateSelector"
                                                    GoogleDataTemplate="{StaticResource GoogleLyricsDataTemplate}"
                                                    LocalDataTemplate="{StaticResource LocalLyricsDataTemplate}" />

  <templateSelectors:SongImageTemplateSelector x:Key="SongImageTemplateSelector"
                                               AlbumDataTemplate="{StaticResource AlbumImageDatatemplate}"
                                               GifDataTemplate="{StaticResource GifImageDatatemplate}" />


  <Style x:Key="ListViewItem_PlayerTrack" TargetType="{x:Type ListViewItem}">
    <Setter Property="Foreground" Value="{StaticResource 100_WhiteTransparentBrush}" />
    <Setter Property="FontFamily" Value="Arial" />
    <Setter Property="FontWeight" Value="Light" />
    <Setter Property="Height" Value="50" />
    <Setter Property="Padding" Value="0" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border x:Name="Bd"
                  Padding="0,5,8,0"
                  Background="{TemplateBinding Background}">
            <Border.ContextMenu>
              <ContextMenu>
                <MenuItem Command="{Binding DeleteSongFromPlaylist}" Header="Delete song from playlist" />
                <MenuItem Command="{Binding DeleteSongFromPlaylistWithAlbum}" Header="Delete song album from playlist" />

                <MenuItem IsHitTestVisible="False" />

                <MenuItem Command="{Binding OpenContainingFolder}" Header="Open folder" />
              </ContextMenu>
            </Border.ContextMenu>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="20" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="80" />
              </Grid.ColumnDefinitions>

              <Button Grid.RowSpan="2"
                      Margin="8,0"
                      Command="{Binding Play}"
                      Style="{StaticResource PlayMini}" />

              <Grid Name="Container"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ClipToBounds="True">
                <Grid.Resources>
                  <Style x:Key="ListViewTextBlockStyle" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="Text" Value="{Binding Name}" />
                    <Setter Property="Foreground" Value="#decfca" />
                  </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <controls2:ButtonWithIcon Grid.Column="0"
                                          Margin="0,0,3,0"
                                          Padding="2"
                                          HorizontalAlignment="Left"
                                          IconHeight="11"
                                          IconPathStyle="{StaticResource Info}"
                                          IconWidth="11"
                                          ToolTip="{Binding Model.DiskLocation}">

                  <controls2:ButtonWithIcon.Style>
                    <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="{x:Type controls2:ButtonWithIcon}">
                      <Setter Property="IconHoverColor" Value="#40a8e6" />
                      <Setter Property="IconDefaultColor" Value="#27404f" />
                      <Setter Property="Opacity" Value="1" />
                      <Setter Property="Margin" Value="0,-5,0,-5" />

                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="IconHoverColor" Value="#522e05" />
                          <Setter Property="IconDefaultColor" Value="#80050505" />
                        </DataTrigger>
                      </Style.Triggers>

                    </Style>
                  </controls2:ButtonWithIcon.Style>

                </controls2:ButtonWithIcon>

                <TextBlock Name="NonPlayingTextBlock"
                           Grid.Column="1"
                           Padding="0"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource Roboto}"
                           FontSize="18"
                           FontWeight="Bold"
                           Style="{StaticResource ListViewTextBlockStyle}">

                  <b:Interaction.Behaviors>
                    <text1:PanningTextWithFontSizeBehavior BiggerFontSize="21"
                                                           Container="{Binding ElementName=Bd}"
                                                           IgnoreSizeAnimation="{Binding IsPlaying}"
                                                           IsMouseOverRelativeToContainer="True" />
                  </b:Interaction.Behaviors>
                </TextBlock>

                <TextBlock Name="PlayingTextBlock"
                           Grid.Column="1"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource Roboto}"
                           FontWeight="Bold">
                  <TextBlock.Style>
                    <Style BasedOn="{StaticResource ListViewTextBlockStyle}" TargetType="TextBlock">
                      <Setter Property="FontSize" Value="21" />
                      <Setter Property="Visibility" Value="Hidden" />

                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="Foreground" Value="#24140c" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                  <b:Interaction.Behaviors>
                    <text1:PanningTextWithFontSizeBehavior BiggerFontSize="21"
                                                           Container="{Binding ElementName=Container}"
                                                           IgnoreSizeAnimation="{Binding IsPlaying}"
                                                           IsMouseOverRelativeToContainer="True" />
                  </b:Interaction.Behaviors>
                </TextBlock>

              </Grid>

              <TextBlock Grid.Row="1"
                         Grid.Column="1"
                         FontFamily="{StaticResource Roboto}"
                         FontSize="12">
                <Run FontSize="13" Text="{Binding ArtistViewModel.Name, Mode=OneWay}">
                  <Run.Style>
                    <Style TargetType="Run">
                      <Setter Property="Foreground" Value="#f2e0cb" />
                      <Setter Property="FontWeight" Value="Bold" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <!--<Setter Property="Foreground" Value="#e8c59e" />-->
                          <Setter Property="Foreground" Value="#24140c" />
                          <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Run.Style>
                </Run>
                <Run Text="{Binding AlbumViewModel.Name, Mode=OneWay, StringFormat={}({0})}">
                  <Run.Style>
                    <Style TargetType="Run">
                      <Setter Property="Foreground" Value="#edfffa" />
                      <Setter Property="FontWeight" Value="DemiBold" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <!--<Setter Property="Foreground" Value="White" />-->
                          <Setter Property="Foreground" Value="#24140c" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Run.Style>
                </Run>

                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{StaticResource OrangeBrush}" />
                    <Setter Property="Opacity" Value="0.35" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Opacity" Value="0.75" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <TextBlock Name="DurationTextBlock"
                         Grid.Column="3"
                         Margin="0,5,0,0"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Top"
                         FontFamily="{StaticResource Roboto}"
                         FontSize="13"
                         FontWeight="Bold"
                         Text="{Binding Duration, Converter={converters1:TimeConverter TimeType=Second}}">
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Setter Property="Opacity" Value="0.35" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Opacity" Value="0.75" />
                        <Setter Property="Foreground" Value="Black" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <Grid Grid.Row="1"
                    Grid.Column="3"
                    >

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Grid Margin="5,0,15,3" HorizontalAlignment="Right">
                  <Grid.Resources>
                    <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="controls2:ButtonWithIcon">
                      <Setter Property="IconHeight" Value="11" />
                      <Setter Property="IconWidth" Value="11" />
                    </Style>
                  </Grid.Resources>

                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>


                  <controls2:ButtonWithIcon Margin="0,0,0,0"
                                            Padding="0"
                                            HorizontalAlignment="Right"
                                            IconHeight="11"
                                            IconPathStyle="{StaticResource TextLyrics}"
                                            IconWidth="11"
                                            ToolTip="Lyrics">
                    <controls2:ButtonWithIcon.Style>
                      <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="{x:Type controls2:ButtonWithIcon}">
                        <Setter Property="IconHoverColor" Value="#59ad55" />
                        <Setter Property="IconDefaultColor" Value="#2b5229" />
                        <Setter Property="Opacity" Value="1" />
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="IconHoverColor" Value="#522e05" />
                            <Setter Property="IconDefaultColor" Value="#FF050505" />
                          </DataTrigger>

                          <DataTrigger Binding="{Binding Lyrics}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                          </DataTrigger>

                          <DataTrigger Binding="{Binding Lyrics}" Value="">
                            <Setter Property="Visibility" Value="Collapsed" />
                          </DataTrigger>

                        </Style.Triggers>
                      </Style>
                    </controls2:ButtonWithIcon.Style>

                  </controls2:ButtonWithIcon>

                  <controls2:ButtonWithIcon Grid.Column="1"
                                            Padding="0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            IconHeight="11"
                                            IconPathStyle="{StaticResource Microphone}"
                                            IconWidth="11"
                                            ToolTip="Synced lyrics">

                    <controls2:ButtonWithIcon.Style>
                      <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="{x:Type controls2:ButtonWithIcon}">
                        <Setter Property="IconHoverColor" Value="#85876d" />
                        <Setter Property="IconDefaultColor" Value="#414236" />
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="Margin" Value="2,-8,0,-7" />

                        <Setter Property="Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls2:ButtonWithIcon}">
                              <Border Width="{TemplateBinding Width}"
                                      Height="{TemplateBinding Height}"
                                      Margin="{TemplateBinding Margin}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      Background="{TemplateBinding Background}">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                  <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition />
                                  </Grid.ColumnDefinitions>

                                  <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                  </Grid.RowDefinitions>

                                  <Path Name="ButtonIcon"
                                        Width="{TemplateBinding IconWidth}"
                                        Height="{TemplateBinding IconHeight}"
                                        Margin="0"
                                        Fill="{TemplateBinding IconBrush}"
                                        Style="{TemplateBinding IconPathStyle}" />


                                  <ContentControl Grid.Row="1"
                                                  Grid.Column="1"
                                                  BorderThickness="0"
                                                  Content="{Binding LRCFile}"
                                                  ContentTemplateSelector="{StaticResource LyricsProviderTemplateSelector}" />


                                </Grid>

                                <b:Interaction.Triggers>
                                  <b:EventTrigger EventName="MouseEnter">
                                    <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateHoverColor}" />
                                  </b:EventTrigger>

                                  <b:EventTrigger EventName="MouseLeave">
                                    <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateDefaultColor}" />
                                  </b:EventTrigger>
                                </b:Interaction.Triggers>

                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                  <Setter Property="Cursor" Value="Hand" />
                                  <Trigger.EnterActions>
                                    <RemoveStoryboard BeginStoryboardName="ResetForegroundStoryBoard" />

                                    <BeginStoryboard x:Name="ChangeForegroundStoryBoard">
                                      <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                                        To="{StaticResource DefaultWhiteColor}"
                                                        Duration="0:0:.15" />
                                      </Storyboard>
                                    </BeginStoryboard>


                                  </Trigger.EnterActions>
                                  <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="ChangeForegroundStoryBoard" />
                                    <BeginStoryboard x:Name="ResetForegroundStoryBoard">
                                      <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                                        To="{StaticResource 85_DefaultWhiteColor}"
                                                        Duration="0:0:.15" />
                                      </Storyboard>
                                    </BeginStoryboard>
                                  </Trigger.ExitActions>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="IconHoverColor" Value="#522e05" />
                            <Setter Property="IconDefaultColor" Value="#FF050505" />
                          </DataTrigger>

                          <DataTrigger Binding="{Binding LRCFile}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                          </DataTrigger>

                          <DataTrigger Binding="{Binding LRCFile.Provider}" Value="{x:Static lrc:LRCProviders.Google}">
                            <Setter Property="Margin" Value="2,-5,0,-9" />
                          </DataTrigger>

                          <DataTrigger Binding="{Binding LRCFile.Provider}" Value="{x:Static lrc:LRCProviders.Local}">
                            <Setter Property="Margin" Value="2,-7,0,-9" />
                          </DataTrigger>
                        </Style.Triggers>

                      </Style>
                    </controls2:ButtonWithIcon.Style>

                  </controls2:ButtonWithIcon>



                </Grid>



                <controls2:ButtonWithIcon Grid.Column="1"
                                          Padding="0"
                                          HorizontalAlignment="Right"
                                          Command="{Binding Refresh}"
                                          IconHeight="11"
                                          IconPathStyle="{StaticResource Repeate}"
                                          IconWidth="11"
                                          ToolTip="Reload data">
                  <controls2:ButtonWithIcon.Style>
                    <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="{x:Type controls2:ButtonWithIcon}">
                      <Setter Property="IconHoverColor" Value="Gold" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="IconHoverColor" Value="#522e05" />
                          <Setter Property="IconDefaultColor" Value="#FF050505" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </controls2:ButtonWithIcon.Style>

                </controls2:ButtonWithIcon>

              </Grid>

              <controls2:PathButton Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="2"
                                    Width="13"
                                    Height="13"
                                    Margin="5,0,0,0"
                                    VerticalAlignment="Center"
                                    IsChecked="{Binding IsFavorite}"
                                    PathStyle="{StaticResource Favorite}"
                                    ToolTip="Favorite">
                <controls2:PathButton.Style>
                  <Style BasedOn="{StaticResource {x:Type controls2:PathButton}}" TargetType="controls2:PathButton">
                    <Setter Property="IconDefaultColor" Value="#10ffffff" />
                    <Setter Property="IconHoverColor" Value="#8fd4f2" />
                    <Setter Property="PathCheckedBrush" Value="#aa39b2e6" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                        <Setter Property="IconDefaultColor" Value="#30522e05" />
                        <Setter Property="IconHoverColor" Value="#79b1c9" />
                        <Setter Property="PathCheckedBrush" Value="#39b2e6" />
                      </DataTrigger>

                    </Style.Triggers>
                  </Style>
                </controls2:PathButton.Style>

              </controls2:PathButton>

            </Grid>


            <Border.InputBindings>
              <MouseBinding Command="{Binding Play}" MouseAction="LeftDoubleClick" />
            </Border.InputBindings>

          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding IsPlaying}" Value="False" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard Name="As">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#07cfbeb8"
                                    Duration="0:0:.10" />

                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    From="{StaticResource 235_DefaultWhiteColor}"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0.1" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="As" />
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:.10" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>

            <Trigger Property="IsSelected" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="A">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#15cfbeb8"
                                    Duration="0:0:0:0.2" />

                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    From="{StaticResource 200_DefaultWhiteColor}"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0.1" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>

              <Trigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <RemoveStoryboard BeginStoryboardName="As" />
                <BeginStoryboard x:Name="B">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
              <Setter TargetName="NonPlayingTextBlock" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PlayingTextBlock" Property="Visibility" Value="Visible" />
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard x:Name="A1">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    To="{StaticResource 235_DefaultWhiteColor}"
                                    Duration="0:0:0:0.2" />
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#decfca"
                                    Duration="0:0:0:0.2" />
                    <DoubleAnimation Storyboard.TargetName="PlayingTextBlock"
                                     Storyboard.TargetProperty="(TextBlock.FontSize)"
                                     To="21"
                                     Duration="0:0:0:0.2" />
                    <DoubleAnimation Storyboard.TargetName="DurationTextBlock"
                                     Storyboard.TargetProperty="(TextBlock.FontSize)"
                                     To="16"
                                     Duration="0:0:0:0.2" />

                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A1" />
              </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="False">
              <Setter TargetName="NonPlayingTextBlock" Property="Visibility" Value="Visible" />
              <Setter TargetName="PlayingTextBlock" Property="Visibility" Value="Hidden" />
            </DataTrigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="VideoListViewItem_PlayerTrack"
         BasedOn="{StaticResource ListViewItem_PlayerTrack}"
         TargetType="{x:Type ListViewItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border x:Name="Bd"
                  Padding="0,5,8,0"
                  Background="{TemplateBinding Background}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="20" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="80" />
              </Grid.ColumnDefinitions>

              <Button Grid.RowSpan="2"
                      Margin="8,0"
                      Command="{Binding Play}"
                      Style="{StaticResource PlayMini}" />

              <Grid Name="Container"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ClipToBounds="True">
                <Grid.Resources>
                  <Style x:Key="ListViewTextBlockStyle" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="Text" Value="{Binding Name}" />
                    <Setter Property="Foreground" Value="#decfca" />
                  </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <controls2:ButtonWithIcon Grid.Column="0"
                                          Margin="0,0,3,0"
                                          Padding="2"
                                          HorizontalAlignment="Left"
                                          IconHeight="11"
                                          IconPathStyle="{StaticResource Info}"
                                          IconWidth="11"
                                          ToolTip="{Binding Model.DiskLocation}">

                  <controls2:ButtonWithIcon.Style>
                    <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="{x:Type controls2:ButtonWithIcon}">
                      <Setter Property="IconHoverColor" Value="#40a8e6" />
                      <Setter Property="IconDefaultColor" Value="#27404f" />
                      <Setter Property="Opacity" Value="1" />
                      <Setter Property="Margin" Value="0,-5,0,-5" />

                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="IconHoverColor" Value="#522e05" />
                          <Setter Property="IconDefaultColor" Value="#80050505" />
                        </DataTrigger>
                      </Style.Triggers>

                    </Style>
                  </controls2:ButtonWithIcon.Style>

                </controls2:ButtonWithIcon>

                <TextBlock Name="NonPlayingTextBlock"
                           Grid.Column="1"
                           Padding="0"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource Roboto}"
                           FontSize="18"
                           FontWeight="Bold"
                           Style="{StaticResource ListViewTextBlockStyle}">

                  <b:Interaction.Behaviors>
                    <text1:PanningTextWithFontSizeBehavior BiggerFontSize="21"
                                                           Container="{Binding ElementName=Bd}"
                                                           IgnoreSizeAnimation="{Binding IsPlaying}"
                                                           IsMouseOverRelativeToContainer="True" />
                  </b:Interaction.Behaviors>
                </TextBlock>

                <TextBlock Name="PlayingTextBlock"
                           Grid.Column="1"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource Roboto}"
                           FontWeight="Bold">
                  <TextBlock.Style>
                    <Style BasedOn="{StaticResource ListViewTextBlockStyle}" TargetType="TextBlock">
                      <Setter Property="FontSize" Value="21" />
                      <Setter Property="Visibility" Value="Hidden" />

                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="Foreground" Value="#24140c" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                  <b:Interaction.Behaviors>
                    <text1:PanningTextWithFontSizeBehavior BiggerFontSize="21"
                                                           Container="{Binding ElementName=Container}"
                                                           IgnoreSizeAnimation="{Binding IsPlaying}"
                                                           IsMouseOverRelativeToContainer="True" />
                  </b:Interaction.Behaviors>
                </TextBlock>

              </Grid>

              <TextBlock Grid.Row="1"
                         Grid.Column="1"
                         FontFamily="{StaticResource Roboto}"
                         FontSize="12">
                <Run FontSize="13" Text="{Binding TvShow.Name, Mode=OneWay}">
                  <Run.Style>
                    <Style TargetType="Run">
                      <Setter Property="Foreground" Value="#f2e0cb" />
                      <Setter Property="FontWeight" Value="Bold" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <!--<Setter Property="Foreground" Value="#e8c59e" />-->
                          <Setter Property="Foreground" Value="#24140c" />
                          <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Run.Style>
                </Run>
                <Run Text="{Binding Model.SeasonNumber, Mode=OneWay, StringFormat={}(S{0:00}}">
                  <Run.Style>
                    <Style TargetType="Run">
                      <Setter Property="Foreground" Value="#edfffa" />
                      <Setter Property="FontWeight" Value="DemiBold" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <!--<Setter Property="Foreground" Value="White" />-->
                          <Setter Property="Foreground" Value="#24140c" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Run.Style>
                </Run>
                <Run Text="x">
                  <Run.Style>
                    <Style TargetType="Run">
                      <Setter Property="Foreground" Value="#edfffa" />
                      <Setter Property="FontWeight" Value="DemiBold" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <!--<Setter Property="Foreground" Value="White" />-->
                          <Setter Property="Foreground" Value="#24140c" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Run.Style>
                </Run>
                <Run Text="{Binding Model.EpisodeNumber, Mode=OneWay, StringFormat={}E{0:00})}">
                  <Run.Style>
                    <Style TargetType="Run">
                      <Setter Property="Foreground" Value="#edfffa" />
                      <Setter Property="FontWeight" Value="DemiBold" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <!--<Setter Property="Foreground" Value="White" />-->
                          <Setter Property="Foreground" Value="#24140c" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Run.Style>
                </Run>

                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{StaticResource OrangeBrush}" />
                    <Setter Property="Opacity" Value="0.35" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Opacity" Value="0.75" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <TextBlock Name="DurationTextBlock"
                         Grid.Column="3"
                         Margin="0,5,0,0"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Top"
                         FontFamily="{StaticResource Roboto}"
                         FontSize="13"
                         FontWeight="Bold"
                         Text="{Binding Duration, Converter={converters1:TimeConverter TimeType=Second}}">
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Setter Property="Opacity" Value="0.35" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Opacity" Value="0.75" />
                        <Setter Property="Foreground" Value="Black" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <Grid Grid.Row="1" Grid.Column="3">

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Grid Margin="5,0,15,3" HorizontalAlignment="Right">
                  <Grid.Resources>
                    <Style BasedOn="{StaticResource {x:Type controls2:ButtonWithIcon}}" TargetType="controls2:ButtonWithIcon">
                      <Setter Property="IconHeight" Value="11" />
                      <Setter Property="IconWidth" Value="11" />
                    </Style>
                  </Grid.Resources>

                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                </Grid>

                <controls2:PathButton Grid.Row="0"
                                      Grid.RowSpan="2"
                                      Grid.Column="2"
                                      Width="13"
                                      Height="13"
                                      Margin="5,0,0,0"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding IsFavorite}"
                                      PathStyle="{StaticResource Favorite}"
                                      ToolTip="Favorite">
                  <controls2:PathButton.Style>
                    <Style BasedOn="{StaticResource {x:Type controls2:PathButton}}" TargetType="controls2:PathButton">
                      <Setter Property="IconDefaultColor" Value="#10ffffff" />
                      <Setter Property="IconHoverColor" Value="#8fd4f2" />
                      <Setter Property="PathCheckedBrush" Value="#aa39b2e6" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                          <Setter Property="IconDefaultColor" Value="#30522e05" />
                          <Setter Property="IconHoverColor" Value="#79b1c9" />
                          <Setter Property="PathCheckedBrush" Value="#39b2e6" />
                        </DataTrigger>

                      </Style.Triggers>
                    </Style>
                  </controls2:PathButton.Style>

                </controls2:PathButton>
              </Grid>



            </Grid>


            <Border.InputBindings>
              <MouseBinding Command="{Binding Play}" MouseAction="LeftDoubleClick" />
            </Border.InputBindings>

          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding IsPlaying}" Value="False" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard Name="As">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#07cfbeb8"
                                    Duration="0:0:.10" />

                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    From="{StaticResource 235_DefaultWhiteColor}"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0.1" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="As" />
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:.10" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>

            <Trigger Property="IsSelected" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="A">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#15cfbeb8"
                                    Duration="0:0:0:0.2" />

                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    From="{StaticResource 200_DefaultWhiteColor}"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0.1" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>

              <Trigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <RemoveStoryboard BeginStoryboardName="As" />
                <BeginStoryboard x:Name="B">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
              <Setter TargetName="NonPlayingTextBlock" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PlayingTextBlock" Property="Visibility" Value="Visible" />
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard x:Name="A1">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    To="{StaticResource 235_DefaultWhiteColor}"
                                    Duration="0:0:0:0.2" />
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#decfca"
                                    Duration="0:0:0:0.2" />
                    <DoubleAnimation Storyboard.TargetName="PlayingTextBlock"
                                     Storyboard.TargetProperty="(TextBlock.FontSize)"
                                     To="21"
                                     Duration="0:0:0:0.2" />
                    <DoubleAnimation Storyboard.TargetName="DurationTextBlock"
                                     Storyboard.TargetProperty="(TextBlock.FontSize)"
                                     To="16"
                                     Duration="0:0:0:0.2" />

                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A1" />
              </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="False">
              <Setter TargetName="NonPlayingTextBlock" Property="Visibility" Value="Visible" />
              <Setter TargetName="PlayingTextBlock" Property="Visibility" Value="Hidden" />
            </DataTrigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="WindowsPlayerSongs" TargetType="ListView">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItem_PlayerTrack}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListView">
          <Border Background="{TemplateBinding Background}">
            <ScrollViewer>
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
    <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True" />

    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                  VirtualizingPanel.ScrollUnit="Pixel"
                                  VirtualizingPanel.VirtualizationMode="Recycling" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="WindowsPlayerVideos"
         BasedOn="{StaticResource WindowsPlayerSongs}"
         TargetType="ListView">
    <Setter Property="ItemContainerStyle" Value="{StaticResource VideoListViewItem_PlayerTrack}" />
  </Style>




</ResourceDictionary>