<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:VCore.Converters;assembly=VCore"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:text="clr-namespace:VCore.Behaviors.Text;assembly=VCore"
                    xmlns:templateSelectors="clr-namespace:VPlayer.WindowsPlayer.TemplateSelectors"
                    xmlns:controls="clr-namespace:VCore.Controls;assembly=VCore"
                    xmlns:clients="clr-namespace:VPlayer.AudioStorage.InfoDownloader.LRC.Clients;assembly=VPlayer.AudioStorage"
                    xmlns:behaviors="clr-namespace:VPlayer.Player.Behaviors"
                    xmlns:attachedProperties="clr-namespace:VCore.AttachedProperties;assembly=VCore"
                    xmlns:e="http://schemas.epsiloner.git/wpf/"
                    xmlns:controls1="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
                    xmlns:lrc1="clr-namespace:VPlayer.AudioStorage.InfoDownloader.LRC;assembly=VCore">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/VPlayer.Core;component/Styles/ControlsTemplates/ButtonWithIconTemplate.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="TextBox" x:Key="LyricsStyle">
    <Setter Property="FontSize" Value="24"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="Foreground" Value="{StaticResource YellowBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
    <Setter Property="FontWeight" Value="DemiBold"/>
    <Setter Property="IsReadOnly" Value="True"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="0.05" ShadowDepth="5" RenderingBias="Quality" />
      </Setter.Value>
    </Setter>
  </Style>


  <DataTemplate x:Key="LyricsDataTemplate">
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden" >
      <TextBox Text="{Binding Mode=OneWay}"
                   Style="{StaticResource LyricsStyle}">
      </TextBox>
    </ScrollViewer>
  </DataTemplate>

  <DataTemplate x:Key="SyncedLyricsDataTemplate">
    <Grid>
      <TextBlock Text="SYNCED" 
                 Margin="15,8" 
                 FontSize="13"
                 FontFamily="{StaticResource Roboto}" 
                 FontWeight="Normal"
                 VerticalAlignment="Bottom"
                 Foreground="#30ffffff"
                 />
      <ListView ItemsSource="{Binding Lines}" 
                    Background="Transparent"
                    BorderThickness="0"
                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.CanContentScroll="False">
        <ListView.Style>
          <Style TargetType="ListView">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ItemContainerStyle">
              <Setter.Value>
                <Style TargetType="ListViewItem">
                  <Setter Property="Background" Value="Red"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Margin="0">
                          <TextBox Text="{Binding Text, Mode=OneWay}"  >
                            <TextBox.Style>
                              <Style TargetType="TextBox" BasedOn="{StaticResource LyricsStyle}" >
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding IsActual}" Value="true">
                                    <Setter Property="FontSize" Value="32"/>
                                    <Setter Property="Margin" Value="25"/>
                                    <Setter Property="Padding" Value="10"/>
                                    <Setter Property="Background" Value="#80000000"/>
                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </TextBox.Style>
                          </TextBox>
                        </Border>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Setter.Value>
            </Setter>
          </Style>
        </ListView.Style>

        <i:Interaction.Behaviors>
          <behaviors:AutoScrollLyricsBehavior StepSize="29" AnimationTime="0:0:0:0.6"/>
        </i:Interaction.Behaviors>
      </ListView>
    </Grid>
  </DataTemplate>

  <Style TargetType="Path" x:Key="SyncLyricsSubIconStyle">
    <Setter Property="Opacity" Value="0.3"/>
    <Style.Triggers>
      <DataTrigger 
        Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=DataContext.IsPlaying}" Value="true">
        <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=IconBrush}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>



  <DataTemplate x:Key="GoogleLyricsDataTemplate">
    <Path 
      Height="10" 
      Width="10"
      Margin="0 -6 0 0"
      ToolTip="Google drive">
      <Path.Style>
        <Style TargetType="Path" 
               BasedOn="{attachedProperties:MultiStyle GoogleDrive SyncLyricsSubIconStyle}">
          <Setter Property="Fill" Value="#4285f4"/>

          <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd"/>
                <BeginStoryboard x:Name="HoverStoryboardStart">
                  <Storyboard >
                    <DoubleAnimation  To="0.75" 
                                    Duration="0:0:0:0.15" 
                                    Storyboard.TargetProperty="Opacity"/>
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>

              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                <BeginStoryboard x:Name="HoverStoryboardEnd">
                  <Storyboard>
                    <DoubleAnimation To="0.3" Duration="0:0:0:0.15" Storyboard.TargetProperty="Opacity"/>
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Path.Style>
    </Path>
  </DataTemplate>

  <DataTemplate x:Key="LocalLyricsDataTemplate">
    <Path 
          Height="9" 
          Width="9"
          Margin="0 -6 0 0"
          ToolTip="Local file">

      <Path.Style>
        <Style TargetType="Path" 
               BasedOn="{attachedProperties:MultiStyle Folder SyncLyricsSubIconStyle}">
          <Setter Property="Fill" Value="#f4d642"/>

          <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=IsMouseOver}" Value="true">
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardEnd"/>
                <BeginStoryboard x:Name="HoverStoryboardStart">
                  <Storyboard >
                    <DoubleAnimation  To="1" 
                                      Duration="0:0:0:0.15" 
                                      Storyboard.TargetProperty="Opacity"/>
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>

              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="HoverStoryboardStart" />
                <BeginStoryboard x:Name="HoverStoryboardEnd">
                  <Storyboard>
                    <DoubleAnimation To="0.5" Duration="0:0:0:0.15" Storyboard.TargetProperty="Opacity"/>
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Path.Style>
    </Path>
  </DataTemplate>



  <templateSelectors:LyricsTemplateSelector x:Key="LyricsTemplateSelector" 
                                            LyricsDataTemplate="{StaticResource LyricsDataTemplate}"
                                            SyncLyricsDataTemplate="{StaticResource SyncedLyricsDataTemplate}"/>

  <templateSelectors:LyricsProviderTemplateSelector x:Key="LyricsProviderTemplateSelector" 
                                                    GoogleDataTemplate="{StaticResource GoogleLyricsDataTemplate}"
                                                    LocalDataTemplate="{StaticResource LocalLyricsDataTemplate}"/>


  <Style x:Key="ListViewItem_PlayerTrack" TargetType="{x:Type ListViewItem}">
    <Setter Property="Foreground" Value="{StaticResource 100_WhiteTransparentBrush}" />
    <Setter Property="FontFamily" Value="Arial" />
    <Setter Property="FontWeight" Value="Light" />
    <Setter Property="Height" Value="50" />
    <Setter Property="Padding" Value="0" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}" >
          <Border x:Name="Bd"
                  Padding="0,5,8,0"
                  Background="{TemplateBinding Background}" >
            <Border.ContextMenu>
              <ContextMenu>
                <MenuItem Header="Delete song from playlist" Command="{Binding DeleteSongFromPlaylist}"/>
                <MenuItem Header="Delete song album from playlist" Command="{Binding DeleteSongFromPlaylistWithAlbum}"/>

                <MenuItem IsHitTestVisible="False" />

                <MenuItem Header="Open folder" Command="{Binding OpenContainingFolder}"/>
              </ContextMenu>
            </Border.ContextMenu>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="20"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="80" />
              </Grid.ColumnDefinitions>

              <Button Margin="8,0"
                      Grid.RowSpan="2"
                      Command="{Binding Play}"
                      Style="{StaticResource PlayMini}" />

              <Grid Name="Container"
                    Grid.Column="1"

                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ClipToBounds="True">
                <Grid.Resources>
                  <Style x:Key="ListViewTextBlockStyle" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="Text" Value="{Binding Name}" />
                    <Setter Property="Foreground" Value="#decfca"/>
                  </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto"/>
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <controls:ButtonWithIcon IconPathStyle="{StaticResource Info}" 
                                         HorizontalAlignment="Left"
                                         IconHeight="11"
                                         IconWidth="11"
                                         Grid.Column="0"
                                         Margin="0 0 3 0"
                                         ToolTip="{Binding Model.DiskLocation}">

                  <controls:ButtonWithIcon.Style>
                    <Style TargetType="{x:Type controls:ButtonWithIcon}" 
                           BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
                      <Setter Property="IconHoverColor" Value="#40a8e6"/>
                      <Setter Property="IconDefaultColor" Value="#27404f"/>
                      <Setter Property="Opacity" Value="1"/>
                      <Setter Property="Margin" Value="0 -5 0 -5"/>

                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="IconHoverColor" Value="#522e05"/>
                          <Setter Property="IconDefaultColor" Value="#80050505"/>
                        </DataTrigger>
                      </Style.Triggers>

                    </Style>
                  </controls:ButtonWithIcon.Style>

                </controls:ButtonWithIcon>

                <TextBlock Name="NonPlayingTextBlock"
                           FontSize="18"
                           FontWeight="Bold"
                           Padding="0"
                           HorizontalAlignment="Left"
                           Grid.Column="1"
                           FontFamily="{StaticResource Roboto}"
                           Style="{StaticResource ListViewTextBlockStyle}">
                
                  <i:Interaction.Behaviors>
                    <text:PanningTextWithFontSizeBehavior BiggerFontSize="21"
                                                          Container="{Binding ElementName=Bd}"
                                                          IgnoreSizeAnimation="{Binding IsPlaying}"
                                                          IsMouseOverRelativeToContainer="True" />
                  </i:Interaction.Behaviors>
                </TextBlock>

                <TextBlock Name="PlayingTextBlock" 
                           FontFamily="{StaticResource Roboto}" 
                           FontWeight="Bold" 
                           HorizontalAlignment="Left"
                           Grid.Column="1"
                           >
                  <TextBlock.Style>
                    <Style BasedOn="{StaticResource ListViewTextBlockStyle}" TargetType="TextBlock">
                      <Setter Property="FontSize" Value="21" />
                      <Setter Property="Visibility" Value="Hidden" />

                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="Foreground" Value="#24140c" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                  <i:Interaction.Behaviors>
                    <text:PanningTextWithFontSizeBehavior BiggerFontSize="21"
                                                          Container="{Binding ElementName=Container}"
                                                          IgnoreSizeAnimation="{Binding IsPlaying}"
                                                          IsMouseOverRelativeToContainer="True" />
                  </i:Interaction.Behaviors>
                </TextBlock>

              </Grid>

              <TextBlock   Grid.Row="1" 
                           Grid.Column="1"
                           FontSize="12" 
                           FontFamily="{StaticResource Roboto}" 
                           >
                  <Run Text="{Binding ArtistViewModel.Name, Mode=OneWay}" FontSize="13">
                    <Run.Style>
                      <Style TargetType="Run">
                        <Setter Property="Foreground" Value="#f2e0cb" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <!--<Setter Property="Foreground" Value="#e8c59e" />-->
                            <Setter Property="Foreground" Value="#24140c" />
                            <Setter Property="FontWeight" Value="Bold" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Run.Style>
                  </Run>
                  <Run Text="{Binding AlbumViewModel.Name, Mode=OneWay, StringFormat={}({0})}">
                    <Run.Style>
                      <Style TargetType="Run">
                        <Setter Property="Foreground" Value="#edfffa" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <!--<Setter Property="Foreground" Value="White" />-->
                            <Setter Property="Foreground" Value="#24140c" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Run.Style>
                  </Run>

                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{StaticResource OrangeBrush}" />
                    <Setter Property="Opacity" Value="0.35"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Opacity" Value="0.75" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <TextBlock Name="DurationTextBlock"
                         Grid.Column="3"
                         Margin="0,5,0,0"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Top"
                         FontWeight="Bold"
                         FontSize="13"
                         FontFamily="{StaticResource Roboto}"
                         Text="{Binding Duration, Converter={converters:TimeConverter TimeType=Second}}" >
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Setter Property="Opacity" Value="0.35"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Opacity" Value="0.75" />
                        <Setter Property="Foreground" Value="Black" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <Grid   Grid.Column="3" 
                      Grid.Row="1" >

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Grid       HorizontalAlignment="Right"
                            Margin="5 0 15 3">
                  <Grid.Resources>
                    <Style TargetType="controls:ButtonWithIcon" BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
                      <Setter Property="IconHeight" Value="11"/>
                      <Setter Property="IconWidth" Value="11"/>
                    </Style>
                  </Grid.Resources>

                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>



                 

                  <controls:ButtonWithIcon IconPathStyle="{StaticResource TextLyrics}" 
                                           HorizontalAlignment="Right"
                                           IconHeight="11"
                                           IconWidth="11"
                                           ToolTip="Lyrics"
                                           Margin="0 0 0 0"
                                           Padding="0"
                  >
                    <controls:ButtonWithIcon.Style>
                      <Style TargetType="{x:Type controls:ButtonWithIcon}" 
                             BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
                        <Setter Property="IconHoverColor" Value="#59ad55"/>
                        <Setter Property="IconDefaultColor" Value="#2b5229"/>
                        <Setter Property="Opacity" Value="1"/>
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="IconHoverColor" Value="#522e05"/>
                            <Setter Property="IconDefaultColor" Value="#FF050505"/>
                          </DataTrigger>

                          <DataTrigger Binding="{Binding Lyrics}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                          </DataTrigger>

                          <DataTrigger Binding="{Binding Lyrics}" Value="">
                            <Setter Property="Visibility" Value="Collapsed"/>
                          </DataTrigger>

                        </Style.Triggers>
                      </Style>
                    </controls:ButtonWithIcon.Style>

                  </controls:ButtonWithIcon>

                  <controls:ButtonWithIcon IconPathStyle="{StaticResource Microphone}" 
                                           HorizontalAlignment="Right"
                                           IconHeight="11"
                                           IconWidth="11"
                                           ToolTip="Synced lyrics"
                                           VerticalAlignment="Center"
                                           Grid.Column="1">

                    <controls:ButtonWithIcon.Style>
                      <Style TargetType="{x:Type controls:ButtonWithIcon}" 
                             BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
                        <Setter Property="IconHoverColor" Value="#85876d"/>
                        <Setter Property="IconDefaultColor" Value="#414236"/>
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="Margin" Value="2 -5 0 -5"/>
                        <Setter Property="Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls:ButtonWithIcon}">
                              <Border Background="{TemplateBinding Background}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      Width="{TemplateBinding Width}"
                                      Height="{TemplateBinding Height}"
                                      Padding="{TemplateBinding Padding}"
                                      Margin="{TemplateBinding Margin}">
                                <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                  <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                  </Grid.ColumnDefinitions>

                                  <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                  </Grid.RowDefinitions>

                                  <Path Width="{TemplateBinding IconWidth}" 
                                        Height="{TemplateBinding IconHeight}"
                                        Style="{TemplateBinding IconPathStyle}" 
                                        Fill="{TemplateBinding IconBrush}" 
                                        Name="ButtonIcon"
                                        Margin="0"/>


                                  <ContentControl 
                                      Grid.Row="1" 
                                      Grid.Column="1"
                                      Content="{Binding LRCFile}" 
                                      ContentTemplateSelector="{StaticResource LyricsProviderTemplateSelector}" 
                                      BorderThickness="0"/>


                                </Grid>

                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="MouseEnter" >
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateHoverColor}" />
                                  </i:EventTrigger>

                                  <i:EventTrigger EventName="MouseLeave" >
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateDefaultColor}" />
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>

                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                  <Setter Property="Cursor" Value="Hand" />
                                  <Trigger.EnterActions>
                                    <RemoveStoryboard BeginStoryboardName="ResetForegroundStoryBoard"/>

                                    <BeginStoryboard x:Name="ChangeForegroundStoryBoard">
                                      <Storyboard >
                                        <ColorAnimation
                                                Storyboard.TargetProperty="Foreground.Color"
                                                To="{StaticResource DefaultWhiteColor}"
                                                Duration="0:0:.15" />
                                      </Storyboard>
                                    </BeginStoryboard>


                                  </Trigger.EnterActions>
                                  <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="ChangeForegroundStoryBoard"/>
                                    <BeginStoryboard  x:Name="ResetForegroundStoryBoard">
                                      <Storyboard>
                                        <ColorAnimation
                                              Storyboard.TargetProperty="Foreground.Color"
                                              To="{StaticResource 85_DefaultWhiteColor}"
                                              Duration="0:0:.15" />
                                      </Storyboard>
                                    </BeginStoryboard>
                                  </Trigger.ExitActions>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="IconHoverColor" Value="#522e05"/>
                            <Setter Property="IconDefaultColor" Value="#FF050505"/>
                          </DataTrigger>

                          <DataTrigger Binding="{Binding LRCFile}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                          </DataTrigger>

                          <DataTrigger Binding="{Binding LRCFile.Provider}" Value="{x:Static lrc1:LRCProviders.Google }">
                            <Setter Property="Margin" Value="2 -7 0 -9"/>
                          </DataTrigger>

                          <DataTrigger Binding="{Binding LRCFile.Provider}" Value="{x:Static lrc1:LRCProviders.Local }">
                            <Setter Property="Margin" Value="2 -7 0 -9"/>
                          </DataTrigger>
                        </Style.Triggers>

                      </Style>
                    </controls:ButtonWithIcon.Style>

                  </controls:ButtonWithIcon>


                  
                </Grid>



                <controls:ButtonWithIcon IconPathStyle="{StaticResource Repeate}" 
                                        Grid.Column="1"
                                         HorizontalAlignment="Right"
                                        IconHeight="11"
                                         IconWidth="11"
                                         ToolTip="Reload data"
                                         Command="{Binding Refresh}"
                >
                  <controls:ButtonWithIcon.Style>
                    <Style TargetType="{x:Type controls:ButtonWithIcon}" 
                           BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
                      <Setter Property="IconHoverColor" Value="Gold"/>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                          <Setter Property="IconHoverColor" Value="#522e05"/>
                          <Setter Property="IconDefaultColor" Value="#FF050505"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </controls:ButtonWithIcon.Style>

                </controls:ButtonWithIcon>

              </Grid>

              <controls:PathButton PathStyle="{StaticResource Favorite}" 
                                   Width="13"
                                   Height="13"
                                   VerticalAlignment="Center"
                                   Grid.Column="2"
                                   Grid.Row="0"
                                   Grid.RowSpan="2"
                                   IsChecked="{Binding IsFavorite}"
                                   ToolTip="Favorite"
                                  >
                <controls:PathButton.Style>
                  <Style TargetType="controls:PathButton" BasedOn="{StaticResource {x:Type controls:PathButton}}">
                    <Setter Property="IconDefaultColor" Value="#10ffffff"/>
                    <Setter Property="IconHoverColor" Value="#8fd4f2"/>
                    <Setter Property="PathCheckedBrush" Value="#aa39b2e6"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                        <Setter Property="IconDefaultColor" Value="#30522e05"/>
                        <Setter Property="IconHoverColor" Value="#79b1c9"/>
                        <Setter Property="PathCheckedBrush" Value="#39b2e6"/>
                      </DataTrigger>

                    </Style.Triggers>
                  </Style>
                </controls:PathButton.Style>

              </controls:PathButton>

            </Grid>


            <Border.InputBindings>
              <MouseBinding MouseAction="LeftDoubleClick"
                            Command="{Binding Play}"/>
            </Border.InputBindings>

          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding IsPlaying}" Value="False" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard Name="As">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#07cfbeb8"
                                    Duration="0:0:.10" />

                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    From="{StaticResource 235_DefaultWhiteColor}"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0.1" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="As" />
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:.10" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>

            <Trigger Property="IsSelected" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="A">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#15cfbeb8"
                                    Duration="0:0:0:0.2" />

                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    From="{StaticResource 200_DefaultWhiteColor}"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0.1" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>

              <Trigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <RemoveStoryboard BeginStoryboardName="As" />
                <BeginStoryboard x:Name="B">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
              <Setter TargetName="NonPlayingTextBlock" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PlayingTextBlock" Property="Visibility" Value="Visible" />
              <DataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard x:Name="A1">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    To="{StaticResource 235_DefaultWhiteColor}"
                                    Duration="0:0:0:0.2" />
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#decfca"
                                    Duration="0:0:0:0.2" />
                    <DoubleAnimation Storyboard.TargetName="PlayingTextBlock"
                                     Storyboard.TargetProperty="(TextBlock.FontSize)"
                                     To="21"
                                     Duration="0:0:0:0.2" />
                    <DoubleAnimation Storyboard.TargetName="DurationTextBlock"
                                     Storyboard.TargetProperty="(TextBlock.FontSize)"
                                     To="16"
                                     Duration="0:0:0:0.2" />

                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A1" />
              </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="False">
              <Setter TargetName="NonPlayingTextBlock" Property="Visibility" Value="Visible" />
              <Setter TargetName="PlayingTextBlock" Property="Visibility" Value="Hidden" />
            </DataTrigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



  <Style x:Key="WindowsPlayerSongs" TargetType="ListView">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItem_PlayerTrack}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListView">
          <Border Background="{TemplateBinding Background}">
            <ScrollViewer>
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
    <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>

    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"                               
                                VirtualizingPanel.ScrollUnit="Pixel"                             
                                VirtualizingPanel.VirtualizationMode="Recycling"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>




</ResourceDictionary>