<UserControl x:Class="VPlayer.Library.Views.PlaylistsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VPlayer.Library.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:controls="clr-namespace:VCore.Controls;assembly=VCore"
             xmlns:events="clr-namespace:VPlayer.Core.Events;assembly=VPlayer.Core"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:library="clr-namespace:VPlayer.Library;assembly=VPlayer.Core"
             xmlns:controls1="clr-namespace:VCore.Controls;assembly=VCore.WPF"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1800">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/VPlayer.Core;component/Styles/ControlsTemplates/ButtonWithIconTemplate.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-9"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
              <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                <Rectangle Fill="{TemplateBinding Background}" 
                           HorizontalAlignment="Center"
                           Width="2"
                           Margin="0 0 0 0" 
                           IsHitTestVisible="False"/>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <ControlTemplate x:Key="StronglyRecommended" 
                       TargetType='{x:Type ListViewItem}'>
        <Border Padding="10" Name="border" Margin="-10 0 0 0" >
          <Border.Style>
            <Style TargetType="Border">
              <Setter Property="Background" Value="{StaticResource 10_WhiteTransparentBrush}" />
            </Style>
          </Border.Style>
          <StackPanel>
            <GridViewRowPresenter Content="{TemplateBinding Content}"
                                  Columns="{TemplateBinding GridView.ColumnCollection}"/>
          </StackPanel>
          <Border.InputBindings>
            <MouseBinding MouseAction="LeftDoubleClick"
                          Command="{Binding Play}"
                          CommandParameter="{x:Static events:PlaySongsAction.PlayFromPlaylist}"/>
          </Border.InputBindings>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsSelected" Value="true">
            <Setter Property="Background" TargetName="border" Value="#15ffffff"/>
          </Trigger>
          <Trigger Property="IsMouseOver" Value="true">
            <Setter Property="Background" TargetName="border" Value="#10ffffff"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>


      <CollectionViewSource Source="{Binding View}" x:Key="scheduledItems" IsLiveGroupingRequested="True">

        <CollectionViewSource.SortDescriptions>
          <!--This will sort groups-->
          <componentModel:SortDescription PropertyName="IsUserCreated" Direction="Descending"/>
          <!--This will items-->
          <componentModel:SortDescription PropertyName="LastPlayed" Direction="Descending"/>
        </CollectionViewSource.SortDescriptions>

        <CollectionViewSource.GroupDescriptions>
          <PropertyGroupDescription PropertyName="IsUserCreated" />
        </CollectionViewSource.GroupDescriptions>
      </CollectionViewSource>

    </ResourceDictionary>
  </UserControl.Resources>


  <Grid>

    <ListView DataContext="{StaticResource scheduledItems}"
              ItemsSource="{Binding}"
              Background="Transparent"  
              Foreground="#30ffffff" 
              BorderThickness="0" 
              Name="playlists"
              FontSize="15"
              FontFamily="{StaticResource Roboto}"
              FontWeight="Bold"
              Margin="5"
              >
      <ListView.ItemContainerStyle>
        <Style TargetType="{x:Type ListViewItem}"  >
          <Setter Property="Template"
                  Value="{StaticResource StronglyRecommended}"/>

        </Style>
      </ListView.ItemContainerStyle>
      <ListView.View>
        <GridView AllowsColumnReorder="False" >
          <GridView.ColumnHeaderContainerStyle>
            <Style TargetType="GridViewColumnHeader">
              <Setter Property="Background" Value="#10ffffff"/>
              <Setter Property="Foreground" Value="#80ffffff"/>
              <Setter Property="BorderBrush" Value="Red"/>
              <Setter Property="BorderThickness" Value="0"/>
              <Setter Property="Padding" Value="0 10"/>
              <Setter Property="FontSize" Value="15"/>
              <Setter Property="FontWeight" Value="DemiBold"/>
              <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid Background="{TemplateBinding Background}" Margin="-2 0 0 0">
                      <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="Center">
                        <TextBlock Text="{TemplateBinding Content}" 
                                   FontSize="{TemplateBinding FontSize}" 
                                   Foreground="{TemplateBinding Foreground}"
                                   Margin="{TemplateBinding Padding}"/>
                      </DockPanel>
                      <Canvas>
                        <Thumb x:Name="PART_HeaderGripper"
                               Style="{StaticResource GridViewColumnHeaderGripper}"
                               Background="{StaticResource 30_WhiteTransparentBrush}"
                               IsHitTestVisible="False"
                        />
                      </Canvas>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </GridView.ColumnHeaderContainerStyle>
          <GridView.Columns>
            <GridViewColumn Width="120" Header="Play from last" >
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <controls1:ButtonWithIcon Content="Last" 
                                           IconPathStyle="{StaticResource PlaySign}" 
                                           IconMargin="0 0 5 0"
                                           IconHeight="20"
                                           Width="90"
                                           HorizontalContentAlignment="Center"
                                           IconDefaultColor="#50f5936c"
                                           IconHoverColor="{StaticResource OrangeColor}"
                                           Command="{Binding Play}"
                                           CommandParameter="{x:Static events:PlaySongsAction.PlayFromPlaylistLast}"/>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Width="125" Header="Play from start" >
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <controls1:ButtonWithIcon Content="Fresh" IconPathStyle="{StaticResource PlaySign}" 
                                           IconHeight="20"
                                           IconMargin="0 0 5 0"
                                           Width="90"
                                           HorizontalContentAlignment="Center"
                                           IconHoverColor="{StaticResource DefaultRedColor}"
                                           IconDefaultColor="#50db515a"
                                           Command="{Binding Play}"
                                           CommandParameter="{x:Static events:PlaySongsAction.PlayFromPlaylist}"/>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Width="200" Header="Name" >
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock Text="{Binding Name}" Foreground="#80ffffff"/>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Width="180" Header="Last played" 
                            DisplayMemberBinding="{Binding LastPlayed, StringFormat={}dd.MM:yy / hh:mm:ss}"/>
            <GridViewColumn Width="150" Header="Hash" DisplayMemberBinding="{Binding SongsInPlaylitsHashCode,Converter={library:HashConverter}}"/>
          
            <GridViewColumn Width="100" Header="Song count" DisplayMemberBinding="{Binding SongCount}"/>
            <GridViewColumn Width="75" Header="Settings">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal">
                    <controls1:PathButton Margin="0,0,10,5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                IsChecked="{Binding IsRepeating}"
                                PathStyle="{StaticResource Repeate}" 
                                Height="15"
                                Width="15"/>

                    <controls1:PathButton Margin="0,0,35,5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                IsChecked="{Binding IsShuffle}"
                                PathStyle="{StaticResource Shuffle}"  
                                Height="15"
                                Width="15"/>
                  </StackPanel>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Width="75" Header="Actions">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal">
                    <controls1:ButtonWithIcon IconPathStyle="{StaticResource Delete}" 
                                             IconDefaultColor="#783734"
                                             IconHoverColor="#f04d46"
                                             IconHeight="12"
                                             Padding="0"
                                             Command="{Binding Delete}"/>
                  </StackPanel>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
          </GridView.Columns>
        </GridView>
      </ListView.View>

      <ListView.GroupStyle>
        <GroupStyle>
          <GroupStyle.HeaderTemplate>
            <DataTemplate>
              <Border Background="#10ffffff"
                      Margin="0 5 0 0"
                      Padding="10">
                <TextBlock 
                           FontSize="15"
                           FontWeight="Bold"
                           FontFamily="{StaticResource Roboto}"
                           Foreground="#a7b5b4"
                           >
                  <TextBlock.Style>
                    <Style TargetType="TextBlock">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Name}" Value="True">
                          <Setter Property="Text" Value="User created"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Name}" Value="False">
                          <Setter Property="Text" Value="Generated"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                </TextBlock>
              </Border>

            </DataTemplate>
          </GroupStyle.HeaderTemplate>
        </GroupStyle>
      </ListView.GroupStyle>
    </ListView>


  </Grid>
</UserControl>
