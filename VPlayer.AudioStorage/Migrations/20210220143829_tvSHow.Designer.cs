// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VPlayer.AudioStorage.AudioDatabase;

namespace VPlayer.AudioStorage.Migrations
{
    [DbContext(typeof(AudioDatabaseContext))]
    [Migration("20210220143829_tvSHow")]
    partial class tvSHow
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumFrontCoverFilePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumFrontCoverURI")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MusicBrainzId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlbumIdCover")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArtistCover")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("MusicBrainzId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.PlaylistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdSong")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderInPlaylist")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SongsPlaylistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdSong");

                    b.HasIndex("SongsPlaylistId");

                    b.ToTable("PlaylistSongs");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.PlaylistTvShowEpisode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdTvShowEpisode")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderInPlaylist")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvShowId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvShowPlaylistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdTvShowEpisode");

                    b.HasIndex("TvShowId");

                    b.HasIndex("TvShowPlaylistId");

                    b.ToTable("PlaylistsTvShowEpisode");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Chartlyrics_Lyric")
                        .HasColumnType("TEXT");

                    b.Property<string>("Chartlyrics_LyricCheckSum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Chartlyrics_LyricId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiskLocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LRCLyrics")
                        .HasColumnType("TEXT");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MusicBrainzId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.SongsPlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<long?>("HashCode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReapting")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShuffle")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUserCreated")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<float>("LastItemElapsedTime")
                        .HasColumnType("REAL");

                    b.Property<int>("LastItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastPlayed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SongPlaylists");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.TvShowEpisode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiskLocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TvShowId");

                    b.ToTable("TvShowEpisodes");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.TvShowPlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<long?>("HashCode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReapting")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShuffle")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUserCreated")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<float>("LastItemElapsedTime")
                        .HasColumnType("REAL");

                    b.Property<int>("LastItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastPlayed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TvShowPlaylists");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TvShows");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Album", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.PlaylistSong", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Song", "Song")
                        .WithMany()
                        .HasForeignKey("IdSong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.SongsPlaylist", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("SongsPlaylistId");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.PlaylistTvShowEpisode", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.TvShowEpisode", "TvShowEpisode")
                        .WithMany()
                        .HasForeignKey("IdTvShowEpisode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.TvShow", "TvShow")
                        .WithMany()
                        .HasForeignKey("TvShowId");

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.TvShowPlaylist", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("TvShowPlaylistId");

                    b.Navigation("TvShow");

                    b.Navigation("TvShowEpisode");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Song", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.TvShowEpisode", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.TvShow", "TvShow")
                        .WithMany("Episodes")
                        .HasForeignKey("TvShowId");

                    b.Navigation("TvShow");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.SongsPlaylist", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.TvShowPlaylist", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShow", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
