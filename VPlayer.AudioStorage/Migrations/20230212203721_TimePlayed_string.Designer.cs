// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VPlayer.AudioStorage.AudioDatabase;

namespace VPlayer.AudioStorage.Migrations
{
    [DbContext(typeof(AudioDatabaseContext))]
    [Migration("20230212203721_TimePlayed_string")]
    partial class TimePlayed_string
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumFrontCoverFilePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumFrontCoverURI")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MusicBrainzId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlbumIdCover")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArtistCover")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("MusicBrainzId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.FolderStructure.ItemBookmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("FileBrowserType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identificator")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bookmarks");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdTvItem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTvSource")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TvItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdTvSource");

                    b.HasIndex("TvItemId");

                    b.ToTable("TvChannels");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannelGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdTvItem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TvItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TvItemId");

                    b.ToTable("TvChannelGroups");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannelGroupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdTvChannel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TvChannelGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdTvChannel");

                    b.HasIndex("TvChannelGroupId");

                    b.ToTable("TvChannelGroupItems");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvPlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActualItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverPath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<long?>("HashCode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUserCreated")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LastItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastPlayed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TotalPlayedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActualItemId");

                    b.ToTable("TvPlaylists");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceConnection")
                        .HasColumnType("TEXT");

                    b.Property<int>("TvSourceType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TvSources");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.PlaylistSoundItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdReferencedItem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderInPlaylist")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SoundItemFilePlaylistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdReferencedItem");

                    b.HasIndex("SoundItemFilePlaylistId");

                    b.ToTable("PlaylistSongs");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Chartlyrics_Lyric")
                        .HasColumnType("TEXT");

                    b.Property<string>("Chartlyrics_LyricCheckSum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Chartlyrics_LyricId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LRCLyrics")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("MusicBrainzId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UPnPPath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ItemModelId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.SoundFileInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Album")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Indentificator")
                        .HasColumnType("TEXT");

                    b.Property<long>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SoundFileInfos");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.SoundItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FileInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAutomaticLyricsFindEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.Property<long>("TimePlayed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FileInfoId");

                    b.ToTable("SoundItems");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.SoundItemFilePlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActualItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverPath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<long?>("HashCode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReapting")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShuffle")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUserCreated")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<float>("LastItemElapsedTime")
                        .HasColumnType("REAL");

                    b.Property<int>("LastItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastPlayed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlaylistType")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("TotalPlayedTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("WatchFolder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActualItemId");

                    b.HasIndex("HashCode", "IsUserCreated")
                        .IsUnique();

                    b.ToTable("SongPlaylists");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceTypeText")
                        .HasColumnType("TEXT");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("ManufacturerURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelURL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("PresentationURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("UDN")
                        .HasColumnType("TEXT");

                    b.Property<string>("UPC")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UPnPDevices");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPMediaRenderer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("PresentationURL")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UPnPDeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UPnPDeviceId");

                    b.ToTable("UPnPMediaRenderers");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPMediaServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AliasURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentDirectoryControlUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultIconUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<bool>("OnlineServer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PresentationURL")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UPnPDeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UPnPDeviceId");

                    b.ToTable("UPnPMediaServers");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ControlURL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventSubURL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("SCPDURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UPnPDeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UPnPDeviceId");

                    b.ToTable("UPnPServices");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.PlaylistVideoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdReferencedItem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderInPlaylist")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VideoFilePlaylistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdReferencedItem");

                    b.HasIndex("VideoFilePlaylistId");

                    b.ToTable("PlaylistsTvShowEpisode");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CsfdUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterPath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TvShows");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShowEpisode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TvShowId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvShowSeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VideoItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TvShowId");

                    b.HasIndex("TvShowSeasonId");

                    b.HasIndex("VideoItemId");

                    b.ToTable("TvShowEpisodes");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShowSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CsfdUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("InfoDownloadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterPath")
                        .HasColumnType("TEXT");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TvShowId");

                    b.ToTable("TvShowsSeasons");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.VideoFilePlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActualItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverPath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<long?>("HashCode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReapting")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShuffle")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUserCreated")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<float>("LastItemElapsedTime")
                        .HasColumnType("REAL");

                    b.Property<int>("LastItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastPlayed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TotalPlayedTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("WatchFolder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActualItemId");

                    b.HasIndex("HashCode", "IsUserCreated")
                        .IsUnique();

                    b.ToTable("TvShowPlaylists");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.VideoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AspectRatio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AudioTrack")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CropRatio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SubtitleTrack")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TimePlayed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("VideoItems");
                });

            modelBuilder.Entity("VPlayer.IPTV.ViewModels.TvItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TvItem");
                });

            modelBuilder.Entity("VPlayer.IPTV.ViewModels.TvPlaylistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdReferencedItem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderInPlaylist")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvPlaylistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdReferencedItem");

                    b.HasIndex("TvPlaylistId");

                    b.ToTable("TvPlaylistItem");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Album", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannel", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.IPTV.TvSource", "TvSource")
                        .WithMany("TvChannels")
                        .HasForeignKey("IdTvSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlayer.IPTV.ViewModels.TvItem", "TvItem")
                        .WithMany()
                        .HasForeignKey("TvItemId");

                    b.Navigation("TvItem");

                    b.Navigation("TvSource");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannelGroup", b =>
                {
                    b.HasOne("VPlayer.IPTV.ViewModels.TvItem", "TvItem")
                        .WithMany()
                        .HasForeignKey("TvItemId");

                    b.Navigation("TvItem");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannelGroupItem", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannel", "TvChannel")
                        .WithMany()
                        .HasForeignKey("IdTvChannel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannelGroup", null)
                        .WithMany("TvChannelGroupItems")
                        .HasForeignKey("TvChannelGroupId");

                    b.Navigation("TvChannel");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvPlaylist", b =>
                {
                    b.HasOne("VPlayer.IPTV.ViewModels.TvPlaylistItem", "ActualItem")
                        .WithMany()
                        .HasForeignKey("ActualItemId");

                    b.Navigation("ActualItem");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.PlaylistSoundItem", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.SoundItem", "ReferencedItem")
                        .WithMany()
                        .HasForeignKey("IdReferencedItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.SoundItemFilePlaylist", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("SoundItemFilePlaylistId");

                    b.Navigation("ReferencedItem");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Song", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.SoundItem", "ItemModel")
                        .WithMany()
                        .HasForeignKey("ItemModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("ItemModel");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.SoundItem", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.SoundFileInfo", "FileInfo")
                        .WithMany()
                        .HasForeignKey("FileInfoId");

                    b.Navigation("FileInfo");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.SoundItemFilePlaylist", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.PlaylistSoundItem", "ActualItem")
                        .WithMany()
                        .HasForeignKey("ActualItemId");

                    b.Navigation("ActualItem");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPMediaRenderer", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPDevice", "UPnPDevice")
                        .WithMany()
                        .HasForeignKey("UPnPDeviceId");

                    b.Navigation("UPnPDevice");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPMediaServer", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPDevice", "UPnPDevice")
                        .WithMany()
                        .HasForeignKey("UPnPDeviceId");

                    b.Navigation("UPnPDevice");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPService", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPDevice", null)
                        .WithMany("Services")
                        .HasForeignKey("UPnPDeviceId");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.PlaylistVideoItem", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.VideoItem", "ReferencedItem")
                        .WithMany()
                        .HasForeignKey("IdReferencedItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.VideoFilePlaylist", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("VideoFilePlaylistId");

                    b.Navigation("ReferencedItem");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShowEpisode", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.TvShow", "TvShow")
                        .WithMany()
                        .HasForeignKey("TvShowId");

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.TvShowSeason", "TvShowSeason")
                        .WithMany("Episodes")
                        .HasForeignKey("TvShowSeasonId");

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.VideoItem", "VideoItem")
                        .WithMany()
                        .HasForeignKey("VideoItemId");

                    b.Navigation("TvShow");

                    b.Navigation("TvShowSeason");

                    b.Navigation("VideoItem");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShowSeason", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.TvShow", "TvShow")
                        .WithMany("Seasons")
                        .HasForeignKey("TvShowId");

                    b.Navigation("TvShow");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.VideoFilePlaylist", b =>
                {
                    b.HasOne("VPlayer.AudioStorage.DomainClasses.Video.PlaylistVideoItem", "ActualItem")
                        .WithMany()
                        .HasForeignKey("ActualItemId");

                    b.Navigation("ActualItem");
                });

            modelBuilder.Entity("VPlayer.IPTV.ViewModels.TvPlaylistItem", b =>
                {
                    b.HasOne("VPlayer.IPTV.ViewModels.TvItem", "ReferencedItem")
                        .WithMany()
                        .HasForeignKey("IdReferencedItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlayer.AudioStorage.DomainClasses.IPTV.TvPlaylist", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("TvPlaylistId");

                    b.Navigation("ReferencedItem");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvChannelGroup", b =>
                {
                    b.Navigation("TvChannelGroupItems");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvPlaylist", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.IPTV.TvSource", b =>
                {
                    b.Navigation("TvChannels");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.SoundItemFilePlaylist", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.UPnP.UPnPDevice", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShow", b =>
                {
                    b.Navigation("Seasons");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.TvShowSeason", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("VPlayer.AudioStorage.DomainClasses.Video.VideoFilePlaylist", b =>
                {
                    b.Navigation("PlaylistItems");
                });
#pragma warning restore 612, 618
        }
    }
}
