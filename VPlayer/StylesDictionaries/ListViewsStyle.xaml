<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
                    xmlns:local="clr-namespace:VPlayer.StylesDictionaries">


  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="DataTemplates.xaml" />
    <ResourceDictionary Source="OverlayStyles.xaml" />
    <ResourceDictionary Source="TextBlocksStyle.xaml" />
    <ResourceDictionary Source="ButtonsStyle.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="ListView_MenuStyle" TargetType="ListView">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="ListViewItem">
          <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />
          <Setter Property="IsSelected" Value="{Binding IsActive}"/>
          <Setter Property="Template">
            <Setter.Value>
              <!--  Trun off default selection  -->
              <ControlTemplate TargetType="{x:Type ListViewItem}">
                <Border x:Name="Bd"
                        Padding="20,8,20,8"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                  <ContentPresenter Margin="{TemplateBinding Margin}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{Binding Header}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                  </Trigger>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                      <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                      <RemoveStoryboard BeginStoryboardName="B" />
                      <BeginStoryboard>
                        <Storyboard>
                          <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                          To="{StaticResource 30_DefaultWhiteColor}"
                                          Duration="0:0:.25" />
                        </Storyboard>
                      </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                      <BeginStoryboard>
                        <Storyboard>
                          <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                          To="Transparent"
                                          Duration="0:0:.25" />
                        </Storyboard>
                      </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                  </MultiDataTrigger>
                  <Trigger Property="IsSelected" Value="True">
                    <Trigger.EnterActions>
                      <BeginStoryboard x:Name="A">
                        <Storyboard>
                          <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                          To="{StaticResource 50_DefaultWhiteColor}"
                                          Duration="0:0:0:0.2" />
                        </Storyboard>
                      </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                      <RemoveStoryboard BeginStoryboardName="A" />
                      <BeginStoryboard x:Name="B">
                        <Storyboard>
                          <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                          To="Transparent"
                                          Duration="0:0:0:.2" />
                        </Storyboard>
                      </BeginStoryboard>
                    </Trigger.ExitActions>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListView">
          <Border Name="Border"
                  Background="{StaticResource 3_WhiteTransparentBrush}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer>
              <ItemsPresenter />
            </ScrollViewer>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <SolidColorBrush Color="{DynamicResource DefaultRedTransparentColor}" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ListViewItem_Tracks" TargetType="{x:Type ListViewItem}">
    <Setter Property="Foreground" Value="{StaticResource 85_WhiteTransparentBrush}" />
    <Setter Property="FontFamily" Value="Arial" />
    <Setter Property="FontWeight" Value="Thin"/>
    <Setter Property="FontSize" Value="15" />
    <Setter Property="Template">
      <Setter.Value>
        <!--  Trun off default selection  -->
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border x:Name="Bd"
                  Margin="3,3,3,0"
                  Padding="12"
                  Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="true">
            <ContentPresenter Margin="{TemplateBinding Margin}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <RemoveStoryboard BeginStoryboardName="B" />
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#10b3adcd"
                                    Duration="0:0:.10" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:.10" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
              <DataTrigger.EnterActions>
                <BeginStoryboard x:Name="A1">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                    To="{StaticResource DefaultRedColor}"
                                    Duration="0:0:0:0.2" />
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#25050505"
                                    Duration="0:0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A1" />
                <BeginStoryboard x:Name="B1">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                    To="{StaticResource DefaultRedColor}"
                                    Duration="0:0:0:0.2" />
                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                    To="#10fe1b48"
                                    Duration="0:0:0:0.2" />
                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                    To="{StaticResource DefaultWhiteColor}"
                                    Duration="0:0:0:.2" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>

            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="A">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    To="#15FFFFFF"
                                    Duration="0:0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>

              <Trigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="A" />
                <BeginStoryboard x:Name="B">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                    Duration="0:0:0:0.2"
                                    To="Transparent"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="AlbumsSongs" TargetType="ListView">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="ItemContainerStyle" Value="{DynamicResource ListViewItem_Tracks}" />
  </Style>


  <Style x:Key="OverridesBase" TargetType="ListViewItem">
    <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <!--  Trun off default selection  -->
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <ContentPresenter Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="AlbumsPlayGridView" TargetType="ListView">
    <Setter Property="Background" Value="{StaticResource BackgroudBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource OverridesBase}" />

    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <controls:VirtualizingWrapPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>