<UserControl x:Class="VPlayer.Player.Views.PlayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls="clr-namespace:VPlayer.WindowsPlayer.Vlc.Controls;assembly=VVLC"
             xmlns:controls1="clr-namespace:VCore.Controls;assembly=VCore.WPF"
             xmlns:controls2="clr-namespace:VCore.WPF.Controls;assembly=VCore.WPF"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:library="clr-namespace:VPlayer.Library;assembly=VPlayer.Core"
             xmlns:library1="clr-namespace:VPlayer.Library;assembly=VCore.WPF"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:popups="clr-namespace:VCore.WPF.Behaviors.Popups;assembly=VCore.WPF"
             xmlns:soundManagement="clr-namespace:SoundManagement;assembly=SoundManagement"
             xmlns:statusMessage="clr-namespace:VCore.WPF.Controls.StatusMessage;assembly=VCore.WPF"
             xmlns:userControls="clr-namespace:VPlayer.Player.UserControls;assembly=VPlayer.Core"
             xmlns:views="clr-namespace:VPlayer.Player.Views"
             Focusable="False"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/VPlayer.Player;component/Views/PlayerViewResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/VPlayer.Core;component/Styles/StylesDictionaries/DataTemplates.xaml" />
                <ResourceDictionary Source="pack://application:,,,/VPlayer.DarkTheme;component/Styles/StylesDictionaries/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border Height="75" Padding="4">
        <Border.Background>
            <LinearGradientBrush StartPoint="0 1" EndPoint="0 0">
                <GradientStop Offset="1" Color="#101010" />
                <GradientStop Offset="0" Color="{StaticResource BackgroudColor2}" />
            </LinearGradientBrush>
        </Border.Background>
        <Grid x:Name="PlayerGrid" Focusable="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Border Grid.Column="1"
                    Margin="0,0,0,1.5"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Background="Transparent">
                <Grid x:Name="GridParent" DataContext="{Binding ActualViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <controls1:ButtonWithIcon Margin="-2,-0.5,0,1.5"
                                                      Padding="2"
                                                      HorizontalAlignment="Left"
                                                      VerticalAlignment="Center"
                                                      Panel.ZIndex="2"
                                                      DataContext="{Binding ActualItem}"
                                                      IconHeight="11"
                                                      IconPathStyle="{StaticResource Info}"
                                                      IconWidth="11">

                                <controls1:ButtonWithIcon.Style>
                                    <Style BasedOn="{StaticResource {x:Type controls1:ButtonWithIcon}}" TargetType="{x:Type controls1:ButtonWithIcon}">
                                        <Setter Property="IconHoverColor" Value="#4291db" />
                                        <Setter Property="IconDefaultColor" Value="#3b668f" />
                                        <Setter Property="Opacity" Value="1" />
                                        <Setter Property="Margin" Value="0,-5,0,-5" />
                                        <Setter Property="Visibility" Value="Visible" />

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CSFDItem}" Value="{x:Null}">
                                                <Setter Property="IconHoverColor" Value="#757575" />
                                                <Setter Property="IconDefaultColor" Value="#656565" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>
                                </controls1:ButtonWithIcon.Style>

                                <controls1:ButtonWithIcon.ToolTip>
                                    <Border Background="Transparent">
                                        <Grid>
                                            <ContentPresenter Content="{Binding}" ContentTemplateSelector="{StaticResource WindowsPlayerItemsTooltipTemplateSelector}" />
                                        </Grid>
                                    </Border>
                                </controls1:ButtonWithIcon.ToolTip>
                            </controls1:ButtonWithIcon>

                            <TextBlock Grid.Column="1"
                                       FontSize="14"
                                       FontWeight="DemiBold"
                                       Foreground="#9ca379"
                                       Grid.IsSharedSizeScope="True"
                                       Text="{Binding ActualItem.Model.Name}"
                                       ToolTip="{Binding ActualItem.Model.Name}" />
                        </Grid>


                        <ContentControl x:Name="DescriptionText"
                                        Grid.Row="1"
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Content="{Binding ActualItem}"
                                        ContentTemplateSelector="{StaticResource WindowsPlayerItemsTemplateSelectorPlayer}" />


                        <userControls:SoundVizualizer Grid.Row="2"
                                                      Width="390"
                                                      Height="25"
                                                      Margin="0,0,0,0"
                                                      HorizontalAlignment="Left"
                                                      VerticalAlignment="Top"
                                                      Background="Transparent"
                                                      BottomColor="#fe274b"
                                                      IsEnabled="{Binding IsPlaying, Mode=OneWay, FallbackValue=False}"
                                                      MaxFrequency="10000"
                                                      MiddleColor="{StaticResource DefaultRedColor}"
                                                      MinimumBarWidth="1"
                                                      NormlizedDataMaxSilentValue="5"
                                                      NormlizedDataMaxValue="10"
                                                      NormlizedDataMinValue="3"
                                                      NumberOfColumns="130"
                                                      Opacity="1"
                                                      TopColor="{StaticResource DefaultRedColor}"
                                                      UseSkew="True">

                            <userControls:SoundVizualizer.Style>
                                <Style TargetType="userControls:SoundVizualizer">
                                    <Setter Property="Visibility" Value="Hidden" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </userControls:SoundVizualizer.Style>
                        </userControls:SoundVizualizer>
                    </Grid>
                </Grid>
            </Border>

            <controls2:NonTopmostPopup Grid.Column="3"
                                       Margin="0"
                                       HorizontalAlignment="Right"
                                       AllowsTransparency="True"
                                       HorizontalOffset="-4"
                                       IsOpen="True"
                                       Placement="Top"
                                       PlacementTarget="{Binding ElementName=PlayerGrid}"
                                       PopupAnimation="Fade"
                                       StaysOpen="true"
                                       VerticalOffset="-5">
                <Grid DataContext="{Binding StatusMessageViewModel}">
                    <Grid.Resources>
                        <Style TargetType="{x:Type statusMessage:StatusMessage}">
                            <Setter Property="Width" Value="250" />
                            <Setter Property="Height" Value="68" />
                            <Setter Property="Message" Value="{Binding Message}" />
                            <Setter Property="Status" Value="{Binding Status}" />
                            <Setter Property="IsPinned" Value="{Binding IsPinned}" />
                            <Setter Property="MessageState" Value="{Binding MessageState}" />
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="Opacity" Value="0" />
                            <Setter Property="BorderThickness" Value="1" />

                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0 1" EndPoint="0 0">
                                        <GradientStop Offset="1" Color="#101010" />
                                        <GradientStop Offset="0" Color="#080808" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type statusMessage:StatusMessage}">
                                        <Border Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}"
                                                Margin="{TemplateBinding Margin}"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}">

                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto" />
                                                    <RowDefinition Height="auto" />
                                                    <RowDefinition Height="auto" />
                                                </Grid.RowDefinitions>

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto" />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="auto" />
                                                    </Grid.ColumnDefinitions>


                                                    <StackPanel VerticalAlignment="Top" Orientation="Horizontal">
                                                        <StackPanel.Resources>
                                                            <Style BasedOn="{StaticResource {x:Type controls1:PathButton}}" TargetType="controls1:PathButton">
                                                                <Setter Property="Margin" Value="1,0" />
                                                                <Setter Property="Padding" Value="0" />

                                                                <Setter Property="Height" Value="15" />
                                                                <Setter Property="Width" Value="15" />

                                                                <Setter Property="IconMargin" Value="0" />
                                                                <Setter Property="IconHeight" Value="10" />
                                                                <Setter Property="IconWidth" Value="8" />

                                                                <Setter Property="IconDefaultColor" Value="#454545" />
                                                            </Style>
                                                        </StackPanel.Resources>

                                                        <controls1:PathButton Background="Transparent"
                                                                              Command="{Binding Close}"
                                                                              IconDefaultColor="#454545"
                                                                              IconHoverColor="{StaticResource DefaultRedColor}"
                                                                              IsReadOnly="True"
                                                                              PathStyle="{StaticResource xmark}"
                                                                              ToolTip="Close" />

                                                        <controls1:PathButton Margin="0,0,0,-2"
                                                                              IconCheckedColor="{StaticResource YellowColor}"
                                                                              IconHeight="13"
                                                                              IconHoverColor="{StaticResource YellowColor}"
                                                                              IconWidth="10"
                                                                              IsChecked="{Binding IsPinned, RelativeSource={RelativeSource AncestorType=statusMessage:StatusMessage, Mode=FindAncestor}}"
                                                                              PathStyle="{StaticResource thumbtack}"
                                                                              ToolTip="Pin" />
                                                    </StackPanel>


                                                    <Grid Grid.Column="1" Margin="5,0">
                                                        <TextBlock MaxHeight="25"
                                                                   Margin="0,2"
                                                                   ClipToBounds="True"
                                                                   Foreground="#555555"
                                                                   Text="{TemplateBinding Message}"
                                                                   TextTrimming="CharacterEllipsis"
                                                                   ToolTip="{TemplateBinding Message}" />
                                                    </Grid>


                                                    <StackPanel Grid.Column="2"
                                                                VerticalAlignment="Top"
                                                                Orientation="Horizontal">

                                                        <controls1:PathButton Height="15"
                                                                              HorizontalAlignment="Right"
                                                                              Background="Transparent"
                                                                              BorderThickness="0"
                                                                              Command="{Binding Minimize}"
                                                                              IconCheckedColor="{StaticResource DefaultRedColor}"
                                                                              IconDefaultColor="#454545"
                                                                              IconHeight="7"
                                                                              IconHoverColor="{StaticResource DefaultRedColor}"
                                                                              IconMargin="0"
                                                                              IconWidth="11"
                                                                              IsReadOnly="True"
                                                                              ToolTip="Minimize">
                                                            <controls1:PathButton.Style>
                                                                <Style BasedOn="{StaticResource {x:Type controls1:PathButton}}" TargetType="controls1:PathButton">
                                                                    <Setter Property="PathStyle" Value="{StaticResource angle-down}" />

                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding MessageState}" Value="{x:Static statusMessage:MessageStatusState.Minimized}">
                                                                            <Setter Property="PathStyle" Value="{StaticResource angle-up}" />
                                                                            <Setter Property="IsChecked" Value="true" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </controls1:PathButton.Style>
                                                        </controls1:PathButton>

                                                    </StackPanel>

                                                </Grid>

                                                <TextBlock Grid.Row="1"
                                                           Margin="5,0,0,0"
                                                           FontWeight="Bold">
                                                    <Run Text="{Binding Status, RelativeSource={RelativeSource AncestorType=statusMessage:StatusMessage, Mode=FindAncestor}}">
                                                        <Run.Style>
                                                            <Style TargetType="Run">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource AncestorType=statusMessage:StatusMessage, Mode=FindAncestor}}" Value="{x:Static statusMessage:StatusType.Starting}">
                                                                        <Setter Property="Foreground" Value="Yellow" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource AncestorType=statusMessage:StatusMessage, Mode=FindAncestor}}" Value="{x:Static statusMessage:StatusType.Processing}">
                                                                        <Setter Property="Foreground" Value="YellowGreen" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource AncestorType=statusMessage:StatusMessage, Mode=FindAncestor}}" Value="{x:Static statusMessage:StatusType.Done}">
                                                                        <Setter Property="Foreground" Value="#07ab33" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource AncestorType=statusMessage:StatusMessage, Mode=FindAncestor}}" Value="{x:Static statusMessage:StatusType.Failed}">
                                                                        <Setter Property="Foreground" Value="#858585" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource AncestorType=statusMessage:StatusMessage, Mode=FindAncestor}}" Value="{x:Static statusMessage:StatusType.Error}">
                                                                        <Setter Property="Foreground" Value="#bf0808" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Run.Style>
                                                    </Run>
                                                    <Run Foreground="#858585" Text="{Binding Process, StringFormat={}{0:N2}%, Mode=OneWay}" />
                                                </TextBlock>

                                                <TextBlock Grid.Row="2"
                                                           Margin="5,2,0,2"
                                                           Foreground="#454545">
                                                    <Run Text="{Binding ProcessedCount, Mode=OneWay}" />
                                                    <Run Text="/" />
                                                    <Run Text="{Binding NumberOfProcesses, Mode=OneWay}" />
                                                </TextBlock>
                                            </Grid>

                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Height" Value="65" />
                                                    <Setter Property="BorderBrush" Value="#171717" />
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="MessageState" Value="{x:Static statusMessage:MessageStatusState.Minimized}">
                                                <Setter Property="Height" Value="30" />
                                            </Trigger>

                                            <Trigger Property="MessageState" Value="{x:Static statusMessage:MessageStatusState.Closed}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>
                    </Grid.Resources>

                    <statusMessage:StatusMessage Margin="0,0,0,0" />

                </Grid>
                <b:Interaction.Behaviors>
                    <popups:MovePopupWithParentBehavior />
                </b:Interaction.Behaviors>
            </controls2:NonTopmostPopup>

            <Border Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Padding="0,5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Panel.ZIndex="1"
                    CornerRadius="0">

                <Border.Background>
                    <LinearGradientBrush StartPoint="0 1" EndPoint="0 0">
                        <GradientStop Offset="1" Color="#101010" />
                        <GradientStop Offset="0" Color="{StaticResource BackgroudColor2}" />
                    </LinearGradientBrush>
                </Border.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <controls1:ButtonWithIcon Grid.Column="0"
                                                  Margin="0,0,0,0"
                                                  HorizontalAlignment="Right"
                                                  BorderThickness="0"
                                                  Command="{Binding PreviousCommand}"
                                                  IconHeight="25"
                                                  IconPathStyle="{StaticResource NextSong}"
                                                  IconWidth="25"
                                                  IsEnabled="{Binding CanPlay}"
                                                  RenderTransformOrigin="0.5,0.5">
                            <controls1:ButtonWithIcon.RenderTransform>
                                <ScaleTransform ScaleX="-1" />
                            </controls1:ButtonWithIcon.RenderTransform>
                        </controls1:ButtonWithIcon>

                        <Button x:Name="Play_Button"
                                Grid.Column="1"
                                Margin="7"
                                Padding="15"
                                Background="{StaticResource DefaultRedBrush}"
                                BorderThickness="0"
                                Command="{Binding PlayButton}"
                                Style="{StaticResource PlayButton}" />

                        <controls1:ButtonWithIcon Grid.Column="2"
                                                  Margin="0,0,5,0"
                                                  HorizontalAlignment="Left"
                                                  BorderThickness="0"
                                                  Command="{Binding NextCommand}"
                                                  IconHeight="25"
                                                  IconPathStyle="{StaticResource NextSong}"
                                                  IconWidth="25"
                                                  IsEnabled="{Binding CanPlay}"
                                                  RenderTransformOrigin="0.5,0.5" />
                    </Grid>
                </Grid>
            </Border>

            <Grid Grid.Column="2"
                  Margin="5,8,5,5"
                  HorizontalAlignment="Right"
                  DataContext="{x:Static soundManagement:AudioDeviceManager.Instance}">

                <controls1:PathButton x:Name="HideButton"
                                      Width="50"
                                      Height="50"
                                      BorderThickness="0"
                                      Cursor="Hand"
                                      Foreground="#50ffffff"
                                      ForegroundCheckedColor="White"
                                      ForegroundDefaultColor="#50ffffff"
                                      IconCheckedColor="#4298f5"
                                      IconDefaultColor="#353535"
                                      IconHoverColor="#4298f5"
                                      IsChecked="False"
                                      PathStyle="{StaticResource Windows}"
                                      ToolTip="Windows volume">
                    <controls1:PathButton.Style>
                        <Style BasedOn="{StaticResource {x:Type controls1:PathButton}}" TargetType="controls1:PathButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type controls1:PathButton}">
                                        <Border Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}"
                                                Margin="{TemplateBinding Margin}"
                                                Padding="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="3">
                                            <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Path x:Name="PathIcon"
                                                      Width="25"
                                                      Height="25"
                                                      Margin="0,0,5.5,0"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Fill="{TemplateBinding IconBrush}"
                                                      Stretch="Fill"
                                                      Style="{TemplateBinding PathStyle}" />


                                                <TextBlock Margin="0,5,2,0"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           FontWeight="Bold"
                                                           Foreground="{TemplateBinding Foreground}"
                                                           Text="{Binding ActualVolume, StringFormat={}{0:N0} %}" />
                                            </StackPanel>

                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="MouseEnter">
                                                    <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateHoverColor}" />
                                                </b:EventTrigger>

                                                <b:EventTrigger EventName="MouseLeave">
                                                    <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateDefaultColor}" />
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="PathIcon" Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IconCheckedColor}" />

                                                <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />

                                                <Trigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="ResetForegroundStoryBoard" />
                                                    <RemoveStoryboard BeginStoryboardName="ChangeForegroundStoryBoard" />
                                                </Trigger.EnterActions>
                                            </Trigger>

                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand" />
                                            </Trigger>

                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="PathIcon" Property="Fill" Value="#8cc1fa" />
                                                <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />
                                            </Trigger>

                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsChecked" Value="False" />
                                                </MultiTrigger.Conditions>

                                                <MultiTrigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="ResetForegroundStoryBoard" />
                                                    <BeginStoryboard x:Name="ChangeForegroundStoryBoard">
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                                                            From="#ccc"
                                                                            To="{StaticResource DefaultWhiteColor}"
                                                                            Duration="0:0:.15" />
                                                        </Storyboard>
                                                    </BeginStoryboard>

                                                </MultiTrigger.EnterActions>
                                            </MultiTrigger>

                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="False" />
                                                    <Condition Property="IsChecked" Value="False" />
                                                </MultiTrigger.Conditions>

                                                <MultiTrigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="ChangeForegroundStoryBoard" />

                                                    <BeginStoryboard x:Name="ResetForegroundStoryBoard">
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                                                            To="#909090"
                                                                            Duration="0:0:.15" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.EnterActions>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </controls1:PathButton.Style>
                </controls1:PathButton>

                <Popup HorizontalAlignment="Right"
                       AllowsTransparency="True"
                       HorizontalOffset="-125"
                       IsOpen="{Binding ElementName=HideButton, Path=IsChecked}"
                       Placement="Top"
                       PlacementTarget="{Binding ElementName=HideButton}"
                       PopupAnimation="Slide"
                       StaysOpen="False"
                       VerticalOffset="-17">
                    <Border Width="300"
                            Height="100"
                            VerticalAlignment="Bottom"
                            Background="#101010"
                            BorderBrush="#202020"
                            BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <ComboBox Margin="10"
                                      VerticalAlignment="Top"
                                      DisplayMemberPath="Description"
                                      ItemsSource="{Binding SoundDevices}"
                                      SelectedItem="{Binding SelectedSoundDevice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />


                            <Grid Grid.Row="1"
                                  Margin="10,3,10,5"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Bottom">
                                <Slider Grid.Row="0"
                                        Height="4"
                                        Margin="0,0,0,0"
                                        Padding="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        Foreground="{StaticResource DefaultRedBrush}"
                                        IsMoveToPointEnabled="True"
                                        Maximum="100"
                                        Value="{Binding ActualVolume, Mode=TwoWay}" />

                                <TextBlock Margin="0,0,0,0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Bottom"
                                           FontSize="14"
                                           FontWeight="DemiBold"
                                           Foreground="#656565"
                                           Text="Volume" />

                                <TextBlock Margin="0,20,0,0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Bottom"
                                           FontSize="14"
                                           FontWeight="DemiBold"
                                           Foreground="#ccc"
                                           Text="{Binding ActualVolume, StringFormat={}{0:N0} %}" />
                            </Grid>
                        </Grid>
                    </Border>
                </Popup>


            </Grid>

            <Grid Grid.Column="3"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Slider Grid.Row="0"
                        Height="4"
                        Margin="0,15,0,0"
                        Padding="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Foreground="{StaticResource DefaultRedBrush}"
                        IsMoveToPointEnabled="True"
                        Maximum="300"
                        Value="{Binding ActualVolume, Mode=TwoWay}">
                    <Slider.Style>
                        <Style BasedOn="{StaticResource {x:Type Slider}}" TargetType="Slider">
                            <Setter Property="Width" Value="160" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={library1:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                    <Setter Property="Width" Value="95" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Slider.Style>
                </Slider>

                <Grid Grid.Row="1" Margin="0,5,0,10">
                    <TextBlock Margin="2,0,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Bottom"
                               FontSize="14"
                               FontWeight="DemiBold"
                               Foreground="#656565"
                               Text="Volume">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={library1:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Border Width="70"
                            Padding="15,2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            CornerRadius="5">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{StaticResource BackgroudGradientBrush}" />
                                <Setter Property="BorderThickness" Value="2" />
                                <Setter Property="BorderBrush" Value="#15ffffff" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActualVolume}" Value="100">
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="Background" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <TextBlock HorizontalAlignment="Center"
                                   FontSize="14"
                                   Text="{Binding ActualVolume, StringFormat={}{0} %}"
                                   ToolTip="Player volume (Double click to restore 100%)">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="Foreground" Value="#99ffffff" />
                                    <Setter Property="FontStyle" Value="Italic" />
                                    <Setter Property="Cursor" Value="Hand" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActualVolume}" Value="100">
                                            <Setter Property="FontStyle" Value="Normal" />
                                            <Setter Property="Cursor" Value="Arrow" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>

                            </TextBlock.Style>
                            <b:Interaction.Behaviors>
                                <controls:DoubleClickBehavior Command="{Binding ResetVolume}" />
                            </b:Interaction.Behaviors>
                        </TextBlock>
                    </Border>
                </Grid>

                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Margin" Value="0,0,15,0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Converter={library1:IsGreaterConverter}, ConverterParameter=711}" Value="false">
                                <Setter Property="Margin" Value="0,0,3,0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>

            <Border Grid.Column="0"
                    Margin="0,0,7,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Background="Transparent"
                    BorderThickness="1">
                <Border.Resources>
                    <library:CacheImageConverter x:Key="CacheImageConverter" DecodeWidth="100" />
                </Border.Resources>

                <Image HorizontalAlignment="Center"
                       Source="{Binding ActualViewModel.ActualItem.ImagePath, Converter={StaticResource CacheImageConverter}}"
                       Stretch="UniformToFill" />

                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ActualViewModel.ActualItem.ImagePath}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </Border>
</UserControl>
