<UserControl x:Class="VPlayer.Player.Views.PlayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:VPlayer.WindowsPlayer.Behaviors;assembly=VPlayer.WindowsPlayer"
             xmlns:behaviors1="clr-namespace:VPlayer.Player.Behaviors"
             xmlns:behaviors2="clr-namespace:VPlayer.Player.Behaviors;assembly=VPlayer.WindowsPlayer"
             xmlns:behaviors3="clr-namespace:VCore.WPF.Behaviors;assembly=VCore.WPF"
             xmlns:controls="clr-namespace:VPlayer.WindowsPlayer.Vlc.Controls;assembly=VVLC"
             xmlns:controls1="clr-namespace:VCore.Controls;assembly=VCore.WPF"
             xmlns:converters="clr-namespace:VPlayer.Player.Converters"
             xmlns:converters1="clr-namespace:VCore.Converters;assembly=VCore.WPF"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:VPlayer.Player.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:popups="clr-namespace:VCore.WPF.Behaviors.Popups;assembly=VCore.WPF"
             xmlns:soundManagement="clr-namespace:SoundManagement;assembly=SoundManagement"
             xmlns:status="clr-namespace:VPlayer.Core.Managers.Status;assembly=VPlayer.AudioStorage"
             xmlns:templateSelectors="clr-namespace:VPlayer.WindowsPlayer.TemplateSelectors;assembly=VPlayer.WindowsPlayer"
             xmlns:userControls="clr-namespace:VPlayer.Player.UserControls;assembly=VPlayer.Core"
             Focusable="False"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/VPlayer.Player;component/Views/PlayerViewResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/VPlayer.DarkTheme;component/Styles/StylesDictionaries/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>


        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="PlayerGrid" Focusable="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <Border Grid.ColumnSpan="4">
            <Border.Background>
                <LinearGradientBrush StartPoint="0 1" EndPoint="0 0">
                    <GradientStop Offset="1" Color="#101010" />
                    <GradientStop Offset="0" Color="{StaticResource BackgroudColor2}" />
                </LinearGradientBrush>
            </Border.Background>
        </Border>

        <Border Grid.Column="0"
                Width="390"
                HorizontalAlignment="Left"
                Background="Transparent">


            <Grid x:Name="GridParent"
                  Margin="5,0,0,0"
                  VerticalAlignment="Center"
                  DataContext="{Binding ActualViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <TextBlock FontSize="14"
                               FontWeight="DemiBold"
                               Foreground="#9ca379"
                               Grid.IsSharedSizeScope="True"
                               Text="{Binding ActualItem.Model.Name}" />

                    <ContentControl x:Name="DescriptionText"
                                    Grid.Row="1"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Content="{Binding ActualItem}"
                                    ContentTemplateSelector="{StaticResource WindowsPlayerItemsTemplateSelector}" />


                    <userControls:SoundVizualizer Grid.Row="2"
                                                  Width="{Binding ElementName=GridParent, Path=ActualWidth}"
                                                  Height="25"
                                                  Margin="0,0,0,0"
                                                  VerticalAlignment="Top"
                                                  Background="Transparent"
                                                  BottomColor="#fe274b"
                                                  IsEnabled="{Binding IsPlaying, Mode=OneWay, FallbackValue=False}"
                                                  MaxFrequency="10000"
                                                  MiddleColor="{StaticResource DefaultRedColor}"
                                                  MinimumBarWidth="1"
                                                  NormlizedDataMaxValue="10"
                                                  NormlizedDataMinValue="3"
                                                  NumberOfColumns="130"
                                                  Opacity="1"
                                                  TopColor="{StaticResource DefaultRedColor}"
                                                  UseSkew="True">

                        <userControls:SoundVizualizer.Style>
                            <Style TargetType="userControls:SoundVizualizer">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </userControls:SoundVizualizer.Style>
                    </userControls:SoundVizualizer>
                </Grid>
            </Grid>
        </Border>

        <Popup Grid.Column="2"
               HorizontalAlignment="Right"
               AllowsTransparency="True"
               Placement="Top"
               PlacementTarget="{Binding ElementName=PlayerGrid}"
               PopupAnimation="Fade">
            <Grid>
                <ContentPresenter Margin="0,0,0,0"
                                  HorizontalAlignment="Left"
                                  Content="{Binding StatusMessage}"
                                  ContentTemplate="{StaticResource StatusMessageDataTemplate}" />
            </Grid>

            <Popup.Style>
                <Style TargetType="Popup">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Converter={StaticResource DataContextChangedConverter}}" Value="True">
                            <Setter Property="IsOpen" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StatusMessage.MessageStatusState}" Value="{x:Static status:MessageStatusState.Done}">
                            <Setter Property="IsOpen" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StatusMessage.MessageStatusState}" Value="{x:Static status:MessageStatusState.Processing}">
                            <Setter Property="IsOpen" Value="True" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StatusMessage.MessageStatusState}" Value="{x:Static status:MessageStatusState.Beggining}">
                            <Setter Property="IsOpen" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Popup.Style>

            <b:Interaction.Behaviors>
                <popups:MovePopupWithParentBehavior />
            </b:Interaction.Behaviors>
        </Popup>



        <Border Grid.Column="0"
                Grid.ColumnSpan="3"
                Padding="0,5"
                HorizontalAlignment="Center"
                Panel.ZIndex="1"
                CornerRadius="0">

            <Border.Background>
                <LinearGradientBrush StartPoint="0 1" EndPoint="0 0">
                    <GradientStop Offset="1" Color="#101010" />
                    <GradientStop Offset="0" Color="{StaticResource BackgroudColor2}" />
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <controls1:ButtonWithIcon Grid.Column="0"
                                              Margin="0,0,0,0"
                                              HorizontalAlignment="Right"
                                              BorderThickness="0"
                                              Command="{Binding PreviousCommand}"
                                              IconHeight="25"
                                              IconPathStyle="{StaticResource NextSong}"
                                              IconWidth="25"
                                              IsEnabled="{Binding CanPlay}"
                                              RenderTransformOrigin="0.5,0.5">
                        <controls1:ButtonWithIcon.RenderTransform>
                            <ScaleTransform ScaleX="-1" />
                        </controls1:ButtonWithIcon.RenderTransform>
                    </controls1:ButtonWithIcon>

                    <Button x:Name="Play_Button"
                            Grid.Column="1"
                            Margin="7"
                            Padding="15"
                            Background="{StaticResource DefaultRedBrush}"
                            BorderThickness="0"
                            Command="{Binding PlayButton}"
                            Style="{StaticResource PlayButton}" />

                    <controls1:ButtonWithIcon Grid.Column="2"
                                              Margin="0,0,5,0"
                                              HorizontalAlignment="Left"
                                              BorderThickness="0"
                                              Command="{Binding NextCommand}"
                                              IconHeight="25"
                                              IconPathStyle="{StaticResource NextSong}"
                                              IconWidth="25"
                                              IsEnabled="{Binding CanPlay}"
                                              RenderTransformOrigin="0.5,0.5" />
                </Grid>
            </Grid>
        </Border>




        <Grid Grid.Column="1"
              Margin="5,8,5,5"
              HorizontalAlignment="Right"
              DataContext="{x:Static soundManagement:AudioDeviceManager.Instance}">

            <controls1:PathButton x:Name="HideButton"
                                  Width="50"
                                  Height="50"
                                  BorderThickness="0"
                                  Cursor="Hand"
                                  Foreground="#50ffffff"
                                  ForegroundCheckedColor="White"
                                  ForegroundDefaultColor="#50ffffff"
                                  IconDefaultColor="#353535"
                                  IconHoverColor="#4298f5"
                                  IsChecked="False"
                                  PathCheckedBrush="#4298f5"
                                  PathStyle="{StaticResource Windows}"
                                  ToolTip="Windows volume">
                <controls1:PathButton.Style>
                    <Style BasedOn="{StaticResource {x:Type controls1:PathButton}}" TargetType="controls1:PathButton">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type controls1:PathButton}">
                                    <Border Width="{TemplateBinding Width}"
                                            Height="{TemplateBinding Height}"
                                            Margin="{TemplateBinding Margin}"
                                            Padding="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3">
                                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Path x:Name="PathIcon"
                                                  Width="25"
                                                  Height="25"
                                                  Margin="0,0,5.5,0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Fill="{TemplateBinding IconBrush}"
                                                  Stretch="Fill"
                                                  Style="{TemplateBinding PathStyle}" />


                                            <TextBlock Margin="0,5,2,0"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontWeight="Bold"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       Text="{Binding ActualVolume, StringFormat={}{0:N0} %}" />
                                        </StackPanel>

                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="MouseEnter">
                                                <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateHoverColor}" />
                                            </b:EventTrigger>

                                            <b:EventTrigger EventName="MouseLeave">
                                                <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AnimateDefaultColor}" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PathCheckedBrush}" />

                                            <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />

                                            <Trigger.EnterActions>
                                                <RemoveStoryboard BeginStoryboardName="ResetForegroundStoryBoard" />
                                                <RemoveStoryboard BeginStoryboardName="ChangeForegroundStoryBoard" />
                                            </Trigger.EnterActions>
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand" />
                                        </Trigger>

                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="PathIcon" Property="Fill" Value="#8cc1fa" />
                                            <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsChecked" Value="False" />
                                            </MultiTrigger.Conditions>

                                            <MultiTrigger.EnterActions>
                                                <RemoveStoryboard BeginStoryboardName="ResetForegroundStoryBoard" />
                                                <BeginStoryboard x:Name="ChangeForegroundStoryBoard">
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                                                        From="#ccc"
                                                                        To="{StaticResource DefaultWhiteColor}"
                                                                        Duration="0:0:.15" />
                                                    </Storyboard>
                                                </BeginStoryboard>

                                            </MultiTrigger.EnterActions>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="False" />
                                                <Condition Property="IsChecked" Value="False" />
                                            </MultiTrigger.Conditions>

                                            <MultiTrigger.EnterActions>
                                                <RemoveStoryboard BeginStoryboardName="ChangeForegroundStoryBoard" />

                                                <BeginStoryboard x:Name="ResetForegroundStoryBoard">
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                                                        To="#909090"
                                                                        Duration="0:0:.15" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </controls1:PathButton.Style>
            </controls1:PathButton>

            <Popup HorizontalAlignment="Right"
                   AllowsTransparency="True"
                   HorizontalOffset="-125"
                   IsOpen="{Binding ElementName=HideButton, Path=IsChecked}"
                   Placement="Top"
                   PlacementTarget="{Binding ElementName=HideButton}"
                   PopupAnimation="Slide"
                   StaysOpen="False"
                   VerticalOffset="-17">
                <Border Width="300"
                        Height="100"
                        VerticalAlignment="Bottom"
                        Background="#101010"
                        BorderBrush="#202020"
                        BorderThickness="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <ComboBox Margin="10"
                                  VerticalAlignment="Top"
                                  DisplayMemberPath="Description"
                                  ItemsSource="{Binding SoundDevices}"
                                  SelectedItem="{Binding SelectedSoundDevice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />


                        <Grid Grid.Row="1"
                              Margin="10,3,10,5"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Bottom">
                            <Slider Grid.Row="0"
                                    Height="4"
                                    Margin="0,0,0,0"
                                    Padding="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    Foreground="{StaticResource DefaultRedBrush}"
                                    IsMoveToPointEnabled="True"
                                    Maximum="100"
                                    Value="{Binding ActualVolume, Mode=TwoWay}" />

                            <TextBlock Margin="0,0,0,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Bottom"
                                       FontSize="14"
                                       FontWeight="DemiBold"
                                       Foreground="#656565"
                                       Text="Volume" />

                            <TextBlock Margin="0,20,0,0"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Bottom"
                                       FontSize="14"
                                       FontWeight="DemiBold"
                                       Foreground="#ccc"
                                       Text="{Binding ActualVolume, StringFormat={}{0:N0} %}" />
                        </Grid>
                    </Grid>
                </Border>
            </Popup>


        </Grid>

        <Grid Grid.Column="2"
              Margin="0,0,30,0"
              HorizontalAlignment="Right">
            <Slider Grid.Row="0"
                    Width="150"
                    Height="4"
                    Margin="5,15,10,0"
                    Padding="0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Foreground="{StaticResource DefaultRedBrush}"
                    IsMoveToPointEnabled="True"
                    Maximum="300"
                    Value="{Binding ActualVolume, Mode=TwoWay}" />

            <TextBlock Margin="5,0,0,15"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Bottom"
                       FontSize="14"
                       FontWeight="DemiBold"
                       Foreground="#656565"
                       Text="Volume" />

            <TextBlock Margin="0,0,10,15"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Bottom"
                       FontSize="14"
                       FontWeight="DemiBold"
                       Foreground="#ccc"
                       Text="{Binding ActualVolume, StringFormat={}{0} %}"
                       ToolTip="Player volume">
                <b:Interaction.Behaviors>
                    <controls:DoubleClickBehavior Command="{Binding ResetVolume}" />
                </b:Interaction.Behaviors>
            </TextBlock>
        </Grid>


    </Grid>

</UserControl>
